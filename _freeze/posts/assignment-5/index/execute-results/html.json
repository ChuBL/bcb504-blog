{
  "hash": "82bb869cba935d63f76ca82b81045ef5",
  "result": {
    "markdown": "---\ntitle: \"ASSIGNMENT 5: Happy Hockey\"\nsubtitle: \"Corrections for Hockey Data Visualizations\"\nauthor: \"Jiyin Zhang\"\ndate: \"2023-03-07\"\ncategories: [Assignment, DataViz, Tables, Scatterplot, Barplot, Piechart]\nimage: \"Azathothhockeycard.png\"\ncode-fold: true\ncode-tools: true\ndescription: \"Should I trade these draft picks for this bag of magic beans...?\"\n---\n\n\n## OVERVIEW\n\nIn this assignment, we are going to practice creating visualizations for tabular data.  Unlike previous assignments, however, this time we will all be using the same data sets.  I'm doing this because I want everyone to engage in the same logic process and have the same design objectives in mind. \n\n## SCENARIO\n\nImagine you are a high priced data science consultant.  One of your good friends, Cassandra Canuck, is an Assistant General Manager for the Vancouver Canucks, a team in the National Hockey League with a long, long.... long history of futility.\n\nCassandra tells you her boss, General Manager Hans Doofenschmirtz, is considering trading this year's first round draft pick for two second round picks and one third round pick from another team.  For the purposes of this exercise, let's set the 2023 NHL draft order using the [Tankathon Simulator](https://www.tankathon.com/nhl).  The NHL uses a lottery system in which the teams lowest in the standings have the highest odds of getting the first overall pick.  I'll simulate the lottery now...\n\nHOLY CRAP!  The Vancouver Canucks jump up 6 spots, and will pick FIRST overall.  Here is a screenshot:\n\n![](NHLlottery.png)\n\nOur official scenario is this:  \n\n**Vancouver receives:**  The 7th pick in the second round (39th overall), the 10th pick in the second round (42nd overall), and the 10th pick in the third round (74th overall).\n\n**Detroit receives:**  The 1st pick in the first round (1st overall).\n\n\nDoofenschmirtz reasons that more draft picks are better, and is inclined to make the trade.  Cassandra isn't so sure...  \n\nShe asks you to create some data visualizations she can show to her boss that might help him make the best decision.\n\n## DIRECTIONS\n\nCreate a new post in your portfolio for this assignment.  Call it something cool, like NHL draft analysis, or Hockey Analytics, or John Wick....\n\nCopy the data files from the repository, and maybe also the .qmd file.  \n\nUse the .qmd file as the backbone of your assignment, changing the code and the markdown text as you go.\n\n## THE DATA\n\nHow can we evaluate whether trading a first round pick for two second round picks and a third round pick is a good idea?  One approach is to look at the historical performance of players from these draft rounds.\n\nI've created a data set that will allow us to explore player performance as a function of draft position.  If you are curious as to how I obtained and re-arranged these data, you can check out that tutorial [here](../T6-APIsandJSON/index.qmd).  For this assignment, though, I want to focus on the visualizations.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Code\"}\nlibrary(tidyverse)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(readxl)\nlibrary(plotly)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nNHLDraft<-read.csv(\"NHLDraft.csv\")\nNHLDictionary<-read_excel(\"NHLDictionary.xlsx\")\nglimpse(NHLDraft)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 105,936\nColumns: 12\n$ X           <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,…\n$ draftyear   <int> 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001, 2001…\n$ name        <chr> \"Drew Fata\", \"Drew Fata\", \"Drew Fata\", \"Drew Fata\", \"Drew …\n$ round       <int> 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3…\n$ overall     <int> 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86…\n$ pickinRound <int> 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23…\n$ height      <int> 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73…\n$ weight      <int> 209, 209, 209, 209, 209, 209, 209, 209, 209, 209, 209, 209…\n$ position    <chr> \"Defense\", \"Defense\", \"Defense\", \"Defense\", \"Defense\", \"De…\n$ playerId    <int> 8469535, 8469535, 8469535, 8469535, 8469535, 8469535, 8469…\n$ postdraft   <int> 0, 1, 2, 4, 5, 10, 11, 12, 13, 3, 6, 7, 8, 9, 14, 15, 16, …\n$ NHLgames    <int> 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n```\n:::\n\n```{.r .cell-code}\nknitr::kable(NHLDictionary)\n```\n\n::: {.cell-output-display}\n|Attribute   |Type         |Description                                                                                                           |\n|:-----------|:------------|:---------------------------------------------------------------------------------------------------------------------|\n|draftyear   |Ordinal      |Calendar year in which the player was drafted into the NHL.                                                           |\n|name        |Item         |Full name of the player.                                                                                              |\n|round       |Ordinal      |Round in which the player was drafted (1 to 7).                                                                       |\n|overall     |Ordinal      |Overall draft position of the player (1 to 224)                                                                       |\n|pickinRound |Ordinal      |Position in which the player was drafted in their round (1 to 32).                                                    |\n|height      |Quantitative |Player height in inches.                                                                                              |\n|weight      |Quantitative |Player weight in pounds.                                                                                              |\n|position    |Categorical  |Player position (Forward, Defense, Goaltender)                                                                        |\n|playerId    |Item         |Unique ID (key) assigned to each player.                                                                              |\n|postdraft   |Ordinal      |Number of seasons since being drafted (0 to 20).                                                                      |\n|NHLgames    |Quantitative |Number of games played in the NHL in that particular season (regular season is 82 games, playoffs are up to 28 more). |\n:::\n:::\n\n\nIn this case, we have a dataframe with all the drafted players since 2000, their position, their draft year and position, and then rows for each season since being drafted (`postdraft`).  The key variable here is `NHLgames`, which tells us how many games they played in the NHL each season since being drafted.\n\n## SIMPLE SCATTERPLOT\n\nOne thing to realize about professional hockey is that it is pretty rare for a player to play in the NHL right after being drafted.  Players get drafted when they are 18 years old, and they usually play in the juniors, minor leagues, or the NCAA for a bit to further develop.  Let's use a scatterplot to visualize this phenomenon with the most recent draft classes.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndraft2022<-NHLDraft%>%\n  filter(draftyear==2022 & postdraft==0)\n\nggplot(draft2022, aes(x=round, y=NHLgames))+\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\nAs you can see, the players drafted in June of 2022 haven't played much this season.  There are few things wrong with this visualization, however:\n\n1. **Overplotting.**  All those points on the y=0 line represent about 32 players each.  Can you think of a way that adding extra channels might help?\n2. **Labelling.**  Can we create a solid figure caption and better axis labels for this figure?  In your caption, please specify the task(s) the visualization is intended to facilitate, as well as the marks, channels, and key-value pairs used.\n3. **Key-Value pairs:**  Looks like we are using \"round\" as a continuous variable.  Can we change this to an ordered factor?\n\n### Solution:\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(draft2022, aes(x=as.factor(round), fill = factor(NHLgames))) +\n  geom_bar(position = \"stack\", stat = \"count\")+\n  geom_text(aes(label = paste0(\"n=\", after_stat(count))), stat='count', position = position_stack(vjust = 0.5)) +\n  theme_classic()+ \n  labs(title = \"Fig 1. The # of games after a player been drafted\",\n              subtitle = \"Channel: Length, Mark: Bars\",\n              caption = \"The draft year of 2022\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n::: callout-note\n<del>I don't know how to adjust the y-axis according to the count instead of the scale from 0 to 1.</del>\nSolution: changing the `position` of `geom_bar` from `fill` to `stack`.\n:::\n## EXPANDED SCATTERPLOT\n\nThe data from the most recent draft isn't really helpful for our question.  Let's go back in time and use a draft year that has had some time to develop and reach their potential.  How about 2018?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndraft2018<-NHLDraft%>%\n  filter(draftyear==2018 & postdraft<6)\n\nggplot(draft2018, aes(x=round, y=NHLgames))+\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\nHmmm... in addition to the problem of overplotting, we've got an additional issue here.  We actually have two keys and one attribute.  The attribute is `NHLgames`, and the keys are `round` and `postdraft`, but we are only using round.\n\nPostdraft indicates the number of seasons after being drafted.  We have several choices here.  We can make a visualization that uses both keys, or we can somehow summarize the data for one of the keys.\n\nFor example, let's say we just wanted to know the TOTAL number of NHL games played since being drafted.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndrafttot2018<- draft2018%>%\n  group_by(playerId, round, overall, position, name)%>%\n  summarise(totgames=sum(NHLgames))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'playerId', 'round', 'overall', 'position'.\nYou can override using the `.groups` argument.\n```\n:::\n\n```{.r .cell-code}\nggplot(drafttot2018, aes(x=round, y=totgames))+\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nFine, I guess, but we still have to deal with overplotting, and think about whether a scatterplot really helps us accomplish our task.  For this figure do the following:\n\n1. **Overplotting.**  All those points on the y=0 line represent about 32 players each.  Can you you think of a way that adding extra channels might help?\n2. **Labelling.**  Can we create a solid figure caption and better axis labels for this figure?  In your caption, please specify the task(s) the visualizaiton is intended to facilitate, as well as the marks, channels, and key-value pairs used.\n3. **Key-Value pairs:**  Looks like we are using \"round\" as a continuous variable.  Can we change this to an ordered factor?\n\n### Solution\n\n::: {.cell}\n\n```{.r .cell-code}\ndrafttot2018 <- transform(\n  drafttot2018, has_game = ifelse(totgames>0, TRUE, FALSE)\n)\nggplot(drafttot2018, aes(x=as.factor(round), fill = factor(has_game))) +\n  geom_bar(stat = \"count\",\n           #position = drafttot2018$NHLgames\n           position = \"stack\"\n           )+\n  geom_text(aes(label = paste0(factor(has_game))), stat='count', position = position_stack(vjust = 0.5)) +\n  labs(title = \"Fig 2.2 Games after a player been drafted for 6 seasons\",\n              subtitle = \"Channel: Length, Mark: Bars\",\n              caption = \"The draft year of 2018\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(drafttot2018, aes(x=as.factor(round), fill = factor(totgames))) +\n  geom_bar(stat = \"count\",\n           #position = drafttot2018$NHLgames\n           position = \"fill\"\n           )+\n  geom_text(aes(label = paste0(totgames)), stat='count', position = position_fill(vjust = 0.5)) +\n  labs(title = \"Fig 2.1 Games after a player been drafted for 6 seasons\",\n              subtitle = \"Channel: Length, Mark: Bars\",\n              caption = \"The draft year of 2018\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n## SCATTERPLOT WITH OVERALL DRAFT POSITION\n\nThis approach might yield a better match with the scatterplot idiom.  What if we ignore draft round, and use the player's overall draft position instead?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(drafttot2018, aes(x=overall, y=totgames))+\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\nFor this figure, address the following:\n\n1. We are trying to address the notion of trading a pick from round 1 for picks from round 2 and 3.  Add visual channels to this plot that will help us make that decision.\n2. Create a caption and better axis labels for this figure.\n3. What if we wanted to use more than just the 2018 draft class?  \n\n### Solution\n\n::: {.cell}\n\n```{.r .cell-code}\n# library(reshape2)\n# test_df <- melt(data.frame(drafttot2018$overall, drafttot2018$totgames)) %>%\n#   mutate(val_trimmed = case_when(\n#     drafttot2018$overall > 32 * 2 ~ 32 * 2,\n#     drafttot2018$overall < 32 ~ 32,\n#     T ~ drafttot2018$overall\n#   ))\n\ncols <- c(\"#1170AA\", \"#55AD89\", \"#EF6F6A\")\nggplot(subset(drafttot2018, round <= 3), aes(x=overall, y=totgames, color = factor(round)))+\n  geom_point()+\n  scale_color_manual(values = cols) +\n  scale_x_continuous(name =\"Position of the players\")+\n  labs(title = \"Fig 3.1 Total games for the players from first three round\",\n              subtitle = \"Channel: Position, Mark: Point\",\n              caption = \"The draft year of 2018\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# options(dplyr.summarise.inform = FALSE)\n# draft_postdraft_l6<-NHLDraft%>%\n#   filter(postdraft<6)\n# \n# drafttot_postdraft_l6<- draft_postdraft_l6%>%\n#   group_by(draftyear, playerId, round, overall, position, name)%>%\n#   summarise(totgames=sum(NHLgames))\n# \n# cols <- c(\"#1170AA\", \"#55AD89\", \"#EF6F6A\")\n# ggplot(subset(drafttot_postdraft_l6, round <= 3), aes(x=overall, y=totgames, shape = factor(round), color = factor(draftyear)))+\n#   geom_point()+\n#   #scale_color_manual(values = cols) +\n#   scale_x_continuous(name =\"Position of the players\")+\n#   labs(title = \"Fig 3.2 Games for first three round players (post draft < 6)\",\n#               subtitle = \"Channel: Position, Mark: Point\",\n#               caption = \"The draft years from 2000 to 2022\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# https://r-graph-gallery.com/histogram_several_group.html\n# http://www.sthda.com/english/wiki/wiki.php?id_contents=7904\nlibrary(viridis)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: viridisLite\n```\n:::\n\n```{.r .cell-code}\n#library(forcats)\n\noptions(dplyr.summarise.inform = FALSE)\ndraft_postdraft_l6<-NHLDraft%>%\n  filter(postdraft<6)\n\ndrafttot_postdraft_l6<- draft_postdraft_l6%>%\n  group_by(draftyear, playerId, round, overall, position, name)%>%\n  summarise(totgames=sum(NHLgames))\n\nggplot(subset(drafttot_postdraft_l6, round <= 3), \n       aes(x=overall, y=totgames, color=factor(round))) + \n  geom_point() + \n  scale_fill_viridis(discrete=TRUE) +\n  scale_color_viridis(discrete=TRUE) +\n  xlab(\"\") +\n  ylab(\"totgames\") +\n  #facet_grid( ~ draftyear)\n  facet_wrap(~draftyear)+\n  scale_x_continuous(name =\"Position of the players\")+\n  labs(title = \"Fig 3.2 Games for first three round players (post draft < 6)\",\n              subtitle = \"Channel: Position, Mark: Point\",\n              caption = \"The draft years from 2000 to 2022\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# p <- data %>%\n#   #mutate(text = fct_reorder(draftyear, totgames)) %>%\n#   ggplot( aes(x=overall, color=factor(draftyear), fill=factor(draftyear))) +\n#     geom_histogram(alpha=0.6, binwidth = 5) +\n#     scale_fill_viridis(discrete=TRUE) +\n#     scale_color_viridis(discrete=TRUE) +\n#     #theme_ipsum() +\n#     # theme(\n#     #   legend.position=\"none\",\n#     #   panel.spacing = unit(0.1, \"lines\"),\n#     #   strip.text.x = element_text(size = 8)\n#     # ) +\n#     xlab(\"\") +\n#     ylab(\"totgames\") +\n#     facet_wrap(~draftyear)\n# p\n```\n:::\n\n\n## SCATTERPLOT SUMMARY\n\nWe seem to be running into an issue in terms of overplotting.  Scatterplots are great, but they work best for two quantitative attributes, and we have a situation with one or two keys and one quantitative attribute.  The thing is, scatterplots can be very useful when part of our workflow involves modeling the data in some way.  We'll cover this kind of thing in future assignments, but just a bit of foreshadowing here:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(drafttot2018, aes(x=round, y=totgames))+\n  geom_point()+\n  geom_smooth()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using method = 'loess' and formula 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\nAdding the smoothed line doesn't eliminate the overplotting problem, but it does indicate that it exists.  We'll cover other potential solutions (including Cody's violin plots!) to this issue later in the course, when we get to the notions of faceting and data reduction.\n\n### Solution\n\n::: {.cell}\n\n```{.r .cell-code}\ncols <- c(\"#1170AA\", \"#55AD89\", \"#EF6F6A\")\nggplot(subset(drafttot2018, round <= 3), aes(x=overall, y=totgames, color = factor(round)))+\n  geom_point()+\n  geom_smooth()+\n  scale_color_manual(values = cols) +\n  scale_x_continuous(name =\"Position of the players\")+\n  labs(title = \"Fig 3.1 Total games for the players from first three round\",\n              subtitle = \"Channel: Position, Mark: Point, Line\",\n              caption = \"The draft year of 2018\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using method = 'loess' and formula 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n## SIMPLE BAR CHART\n\nOne of the best ways to deal with overplotting is to use our keys to SEPARATE and ORDER our data.  Let's do that now.  I'll stick with the summarized data for the 2018 draft year for now.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(drafttot2018, aes(x = name, y=totgames))+\n  geom_col()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\nEpic.  We now have a bar (column, really) chart with the key being player `name`, and the attribute being the total number of games played.  We've SEPARATED the data using the spatial x-axis position channel, and aligned to that axis as well.  But this visualization clearly sucks.  You need to make it better by:\n\n1. Adding a visual channel indicating draft round.\n2. Fixing the order of the x axis.\n3. Making a caption and better axis labels.\n4. Fixing the values of the x axis labels so they aren't such a mess.\n\n### Solution\n\n::: {.cell}\n\n```{.r .cell-code}\ndrafttot2018_sorted  <- drafttot2018[order(drafttot2018$round), ]\n\ncolor_palette <- viridis(length(unique(drafttot2018_sorted$round)))\n\nplot <- plot_ly(drafttot2018_sorted, x = ~name, y = ~totgames, type = \"bar\", color = ~as.factor(round),\n                colors = color_palette)\nplot <- plot %>%\n  layout(xaxis = list(type = \"category\", automargin = TRUE),\n         margin = list(l = 100),\n         title = list(text = paste0('Fig 4.1 Total games for the players',\n                                    '<br>',\n                                    '<sup>',\n                                    'Channel: Position, Mark: Point, Line',\n                                    '</sup>')),\n         annotations = \n           list(x = 1, y = -0.1, text = \"The draft year of 2018\", \n                showarrow = F, xref='paper', yref='paper', \n                xanchor='right', yanchor='auto', xshift=0, yshift=-100,\n                font=list(size=15, color=\"black\")))%>%\n  config(scrollZoom = TRUE)%>%\n  layout(xaxis = list(categoryorder = \"array\", categoryarray = drafttot2018_sorted$name))\n\nggplotly(plot)\n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"htmlwidget-d3ef297e2914986191e2\" style=\"width:100%;height:464px;\" class=\"plotly html-widget\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-d3ef297e2914986191e2\">{\"x\":{\"visdat\":{\"1583b329377b2\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"1583b329377b2\",\"attrs\":{\"1583b329377b2\":{\"x\":{},\"y\":{},\"color\":{},\"colors\":[\"#440154FF\",\"#443A83FF\",\"#31688EFF\",\"#21908CFF\",\"#35B779FF\",\"#8FD744FF\",\"#FDE725FF\"],\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"bar\"}},\"layout\":{\"margin\":{\"b\":40,\"l\":100,\"t\":25,\"r\":10},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"category\",\"categoryorder\":\"array\",\"categoryarray\":[\"Oliver Wahlstrom\",\"Joel Farabee\",\"Quinn Hughes\",\"Brady Tkachuk\",\"Evan Bouchard\",\"Isac Lundestrom\",\"Joe Veleno\",\"Nicolas Beaudin\",\"K'Andre Miller\",\"Filip Zadina\",\"Martin Kaut\",\"Alexander Alexeyev\",\"Dominik Bokk\",\"Jesperi Kotkaniemi\",\"Andrei Svechnikov\",\"Vitali Kravtsov\",\"Rasmus Dahlin\",\"Grigori Denisenko\",\"Rasmus Kupari\",\"Ryan Merkley\",\"Ty Dellandrea\",\"Barrett Hayton\",\"Liam Foudy\",\"Noah Dobson\",\"Adam Boqvist\",\"Filip Johansson\",\"Rasmus Sandin\",\"Jay O'Brien\",\"Nils Lundkvist\",\"Jacob Bernard-Docker\",\"Ty Smith\",\"Sean Durzi\",\"Martin Fehervary\",\"Ryan McLeod\",\"Kody Clark\",\"Mattias Samuelsson\",\"Jett Woo\",\"Jonathan Tychonick\",\"Bode Wilde\",\"Jack Drury\",\"Jacob Olofsson\",\"Filip Hallander\",\"Akil Thomas\",\"Serron Noel\",\"Kevin Bahl\",\"Jared McIsaac\",\"Gabriel Fortier\",\"Benoit-Olivier Groulx\",\"Adam Ginning\",\"Calen Addison\",\"Olivier Rodrigue\",\"Kirill Marchenko\",\"Ivan Morozov\",\"Jonatan Berggren\",\"Alexander Romanov\",\"Olof Lindbom\",\"Ruslan Iskhakov\",\"Albin Eriksson\",\"Axel Andersson\",\"David Gustafsson\",\"Jesse Ylonen\",\"Scott Perunovich\",\"Joey Keane\",\"Riley Sutter\",\"Jake Wise\",\"Tyler Madden\",\"Riley Stotts\",\"Blake McLaughlin\",\"Jakub Skarek\",\"Alexander Khovanov\",\"Alec Regula\",\"Ty Emberson\",\"Oskar Back\",\"Lukas Dostal\",\"Sampo Ranta\",\"Jack McBain\",\"Cam Hillis\",\"Niklas Nordgren\",\"Jakub Lauko\",\"Seth Barton\",\"Jordan Harris\",\"Jan Jenik\",\"Semyon Der-Arguchintsev\",\"Bulat Shafigullin\",\"Nathan Smith\",\"Connor Dewar\",\"Justus Annunen\",\"Jacob Ragnarsson\",\"Marcus Karlberg\",\"Jesper Eliasson\",\"Linus Karlsson\",\"Logan Hutsko\",\"Dmitry Semykin\",\"Adam Mascherin\",\"Mac Hollowell\",\"Milos Roman\",\"Jacob Pivonka\",\"Philipp Kurashev\",\"Jack Perbix\",\"Nico Gross\",\"Jonathan Gruden\",\"Tyler Weiss\",\"Curtis Hall\",\"Aidan Dudas\",\"Allan McShane\",\"Luke Henman\",\"Curtis Douglas\",\"Matej Pekar\",\"Xavier Bernard\",\"Stanislav Demin\",\"Jack Gorniak\",\"Joel Hofer\",\"Linus Lindstrand Cronholm\",\"Ryan O'Reilly\",\"Lenni Killinen\",\"Martin Pospisil\",\"Jachym Kondelik\",\"Jack St. Ivany\",\"Ivan Prosvetov\",\"Paul Cotter\",\"Jasper Weatherby\",\"Demetrios Koumontzis\",\"Alexander Green\",\"Mitchell Gibson\",\"Brandon Saigeon\",\"Blade Jenkins\",\"Cole Fonstad\",\"Filip Kral\",\"Michael Callahan\",\"Giovanni Vallati\",\"Miska Kukkonen\",\"Wyatte Wylie\",\"Justin Almeida\",\"Lauri Pajuniemi\",\"Samuel Houde\",\"Riley Damiani\",\"Dennis Busby\",\"Declan Chisholm\",\"Vladislav Yeryomenko\",\"Magnus Chrona\",\"Connor Corcoran\",\"Damien Giroux\",\"Akira Schmid\",\"Mikael Hakkarainen\",\"Samuel Ersson\",\"Roman Durny\",\"Simon Johansson\",\"Spencer Stastney\",\"Angus Crookshank\",\"Toni Utunen\",\"Brandon Kruse\",\"Yegor Sharangovich\",\"David Hrenak\",\"Hugh McGing\",\"Danila Zhuravlyov\",\"Shawn Boudrias\",\"Jacob Ingham\",\"Mitchell Hoelscher\",\"Xavier Bouchard\",\"Kevin Mandolese\",\"Alexis Gravel\",\"Michael Kesselring\",\"Pontus Holmberg\",\"David Tendeck\",\"Victor Brattstrom\",\"Alex Kannok-Leipert\",\"Dawson Barteaux\",\"Mathias Laferriere\",\"Veini Vehvilainen\",\"Zachary Emond\",\"Hunter Drew\",\"Simon Kjellberg\",\"Johan Sodergran\",\"Jesper Sellgren\",\"Mathias Emilio Pettersen\",\"Nikolai Kovalenko\",\"Cole Koepke\",\"Jared Moe\",\"Artyom Manukyan\",\"Gavin Hain\",\"Tim Berni\",\"Justin Schutz\",\"Liam Gorman\",\"Peter Diliberatore\",\"Dustyn McFaul\",\"John Leonard\",\"Jermaine Loewen\",\"Trey Fix-Wolansky\",\"Eric Florchuk\",\"Liam Kirk\",\"Josiah Slavin\",\"Dmitry Zavgorodniy\",\"Tyler Tucker\",\"Shamil Shmakov\",\"Radim Salda\",\"Santtu Kinnunen\",\"Jordan Kooy\",\"Zachary Bouthillier\",\"Sam Hentges\",\"William Worge Kreu\",\"Otto Kivenmaki\",\"Patrik Siikanen\",\"Christian Krygier\",\"Jacob Kucharski\",\"Cole Krygier\",\"Eetu Pakkila\",\"Marcus Westfalt\",\"Semyon Kizimov\",\"Milan Kloucek\",\"Jakov Novak\",\"Brett Stapley\",\"Matthew Thiessen\",\"Luke Loheit\",\"Pavel Shen\",\"Ty Taylor\",\"Austin Wong\",\"Riley Hughes\"],\"title\":\"name\"},\"title\":{\"text\":\"Fig 4.1 Total games for the players<br><sup>Channel: Position, Mark: Point, Line<\\/sup>\"},\"annotations\":[{\"x\":1,\"y\":-0.1,\"text\":\"The draft year of 2018\",\"showarrow\":false,\"xref\":\"paper\",\"yref\":\"paper\",\"xanchor\":\"right\",\"yanchor\":\"auto\",\"xshift\":0,\"yshift\":-100,\"font\":{\"size\":15,\"color\":\"black\"}},{\"x\":1,\"y\":-0.1,\"text\":\"The draft year of 2018\",\"showarrow\":false,\"xref\":\"paper\",\"yref\":\"paper\",\"xanchor\":\"right\",\"yanchor\":\"auto\",\"xshift\":0,\"yshift\":-100,\"font\":{\"size\":15,\"color\":\"black\"}}],\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"totgames\"},\"hovermode\":\"closest\",\"showlegend\":true},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false,\"scrollZoom\":true},\"data\":[{\"x\":[\"Oliver Wahlstrom\",\"Joel Farabee\",\"Quinn Hughes\",\"Brady Tkachuk\",\"Evan Bouchard\",\"Isac Lundestrom\",\"Joe Veleno\",\"Nicolas Beaudin\",\"K'Andre Miller\",\"Filip Zadina\",\"Martin Kaut\",\"Alexander Alexeyev\",\"Dominik Bokk\",\"Jesperi Kotkaniemi\",\"Andrei Svechnikov\",\"Vitali Kravtsov\",\"Rasmus Dahlin\",\"Grigori Denisenko\",\"Rasmus Kupari\",\"Ryan Merkley\",\"Ty Dellandrea\",\"Barrett Hayton\",\"Liam Foudy\",\"Noah Dobson\",\"Adam Boqvist\",\"Filip Johansson\",\"Rasmus Sandin\",\"Jay O'Brien\",\"Nils Lundkvist\",\"Jacob Bernard-Docker\",\"Ty Smith\"],\"y\":[161,232,261,337,164,192,130,22,195,179,50,14,0,296,342,49,333,26,110,39,88,155,68,220,156,0,140,0,79,26,123],\"type\":\"bar\",\"name\":\"1\",\"marker\":{\"color\":\"rgba(68,1,84,1)\",\"line\":{\"color\":\"rgba(68,1,84,1)\"}},\"textfont\":{\"color\":\"rgba(68,1,84,1)\"},\"error_y\":{\"color\":\"rgba(68,1,84,1)\"},\"error_x\":{\"color\":\"rgba(68,1,84,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[\"Sean Durzi\",\"Martin Fehervary\",\"Ryan McLeod\",\"Kody Clark\",\"Mattias Samuelsson\",\"Jett Woo\",\"Jonathan Tychonick\",\"Bode Wilde\",\"Jack Drury\",\"Jacob Olofsson\",\"Filip Hallander\",\"Akil Thomas\",\"Serron Noel\",\"Kevin Bahl\",\"Jared McIsaac\",\"Gabriel Fortier\",\"Benoit-Olivier Groulx\",\"Adam Ginning\",\"Calen Addison\",\"Olivier Rodrigue\",\"Kirill Marchenko\",\"Ivan Morozov\",\"Jonatan Berggren\",\"Alexander Romanov\",\"Olof Lindbom\",\"Ruslan Iskhakov\",\"Albin Eriksson\",\"Axel Andersson\",\"David Gustafsson\",\"Jesse Ylonen\",\"Scott Perunovich\"],\"y\":[123,136,130,0,98,0,0,0,23,0,3,0,0,48,0,11,18,0,74,0,38,0,45,196,0,0,0,0,66,34,19],\"type\":\"bar\",\"name\":\"2\",\"marker\":{\"color\":\"rgba(68,58,131,1)\",\"line\":{\"color\":\"rgba(68,58,131,1)\"}},\"textfont\":{\"color\":\"rgba(68,58,131,1)\"},\"error_y\":{\"color\":\"rgba(68,58,131,1)\"},\"error_x\":{\"color\":\"rgba(68,58,131,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[\"Joey Keane\",\"Riley Sutter\",\"Jake Wise\",\"Tyler Madden\",\"Riley Stotts\",\"Blake McLaughlin\",\"Jakub Skarek\",\"Alexander Khovanov\",\"Alec Regula\",\"Ty Emberson\",\"Oskar Back\",\"Lukas Dostal\",\"Sampo Ranta\",\"Jack McBain\",\"Cam Hillis\",\"Niklas Nordgren\",\"Jakub Lauko\",\"Seth Barton\",\"Jordan Harris\",\"Jan Jenik\",\"Semyon Der-Arguchintsev\",\"Bulat Shafigullin\",\"Nathan Smith\",\"Connor Dewar\",\"Justus Annunen\",\"Jacob Ragnarsson\",\"Marcus Karlberg\",\"Jesper Eliasson\",\"Linus Karlsson\",\"Logan Hutsko\",\"Dmitry Semykin\"],\"y\":[2,0,0,0,0,0,0,0,22,0,0,14,16,71,1,0,11,0,66,16,1,0,10,95,4,0,0,0,0,0,0],\"type\":\"bar\",\"name\":\"3\",\"marker\":{\"color\":\"rgba(49,104,142,1)\",\"line\":{\"color\":\"rgba(49,104,142,1)\"}},\"textfont\":{\"color\":\"rgba(49,104,142,1)\"},\"error_y\":{\"color\":\"rgba(49,104,142,1)\"},\"error_x\":{\"color\":\"rgba(49,104,142,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[\"Adam Mascherin\",\"Mac Hollowell\",\"Milos Roman\",\"Jacob Pivonka\",\"Philipp Kurashev\",\"Jack Perbix\",\"Nico Gross\",\"Jonathan Gruden\",\"Tyler Weiss\",\"Curtis Hall\",\"Aidan Dudas\",\"Allan McShane\",\"Luke Henman\",\"Curtis Douglas\",\"Matej Pekar\",\"Xavier Bernard\",\"Stanislav Demin\",\"Jack Gorniak\",\"Joel Hofer\",\"Linus Lindstrand Cronholm\",\"Ryan O'Reilly\",\"Lenni Killinen\",\"Martin Pospisil\",\"Jachym Kondelik\",\"Jack St. Ivany\",\"Ivan Prosvetov\",\"Paul Cotter\",\"Jasper Weatherby\",\"Demetrios Koumontzis\",\"Alexander Green\",\"Mitchell Gibson\"],\"y\":[0,6,0,0,180,0,0,3,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,6,50,50,0,0,0],\"type\":\"bar\",\"name\":\"4\",\"marker\":{\"color\":\"rgba(33,144,140,1)\",\"line\":{\"color\":\"rgba(33,144,140,1)\"}},\"textfont\":{\"color\":\"rgba(33,144,140,1)\"},\"error_y\":{\"color\":\"rgba(33,144,140,1)\"},\"error_x\":{\"color\":\"rgba(33,144,140,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[\"Brandon Saigeon\",\"Blade Jenkins\",\"Cole Fonstad\",\"Filip Kral\",\"Michael Callahan\",\"Giovanni Vallati\",\"Miska Kukkonen\",\"Wyatte Wylie\",\"Justin Almeida\",\"Lauri Pajuniemi\",\"Samuel Houde\",\"Riley Damiani\",\"Dennis Busby\",\"Declan Chisholm\",\"Vladislav Yeryomenko\",\"Magnus Chrona\",\"Connor Corcoran\",\"Damien Giroux\",\"Akira Schmid\",\"Mikael Hakkarainen\",\"Samuel Ersson\",\"Roman Durny\",\"Simon Johansson\",\"Spencer Stastney\",\"Angus Crookshank\",\"Toni Utunen\",\"Brandon Kruse\",\"Yegor Sharangovich\",\"David Hrenak\",\"Hugh McGing\",\"Danila Zhuravlyov\"],\"y\":[0,0,0,2,0,0,0,0,0,0,0,7,0,2,0,0,0,0,17,0,10,0,0,0,0,0,0,190,0,0,0],\"type\":\"bar\",\"name\":\"5\",\"marker\":{\"color\":\"rgba(53,183,121,1)\",\"line\":{\"color\":\"rgba(53,183,121,1)\"}},\"textfont\":{\"color\":\"rgba(53,183,121,1)\"},\"error_y\":{\"color\":\"rgba(53,183,121,1)\"},\"error_x\":{\"color\":\"rgba(53,183,121,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[\"Shawn Boudrias\",\"Jacob Ingham\",\"Mitchell Hoelscher\",\"Xavier Bouchard\",\"Kevin Mandolese\",\"Alexis Gravel\",\"Michael Kesselring\",\"Pontus Holmberg\",\"David Tendeck\",\"Victor Brattstrom\",\"Alex Kannok-Leipert\",\"Dawson Barteaux\",\"Mathias Laferriere\",\"Veini Vehvilainen\",\"Zachary Emond\",\"Hunter Drew\",\"Simon Kjellberg\",\"Johan Sodergran\",\"Jesper Sellgren\",\"Mathias Emilio Pettersen\",\"Nikolai Kovalenko\",\"Cole Koepke\",\"Jared Moe\",\"Artyom Manukyan\",\"Gavin Hain\",\"Tim Berni\",\"Justin Schutz\",\"Liam Gorman\",\"Peter Diliberatore\",\"Dustyn McFaul\",\"John Leonard\"],\"y\":[0,0,0,0,2,0,0,36,0,0,0,0,0,1,0,2,0,0,0,0,0,17,0,0,0,38,0,0,0,0,58],\"type\":\"bar\",\"name\":\"6\",\"marker\":{\"color\":\"rgba(143,215,68,1)\",\"line\":{\"color\":\"rgba(143,215,68,1)\"}},\"textfont\":{\"color\":\"rgba(143,215,68,1)\"},\"error_y\":{\"color\":\"rgba(143,215,68,1)\"},\"error_x\":{\"color\":\"rgba(143,215,68,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[\"Jermaine Loewen\",\"Trey Fix-Wolansky\",\"Eric Florchuk\",\"Liam Kirk\",\"Josiah Slavin\",\"Dmitry Zavgorodniy\",\"Tyler Tucker\",\"Shamil Shmakov\",\"Radim Salda\",\"Santtu Kinnunen\",\"Jordan Kooy\",\"Zachary Bouthillier\",\"Sam Hentges\",\"William Worge Kreu\",\"Otto Kivenmaki\",\"Patrik Siikanen\",\"Christian Krygier\",\"Jacob Kucharski\",\"Cole Krygier\",\"Eetu Pakkila\",\"Marcus Westfalt\",\"Semyon Kizimov\",\"Milan Kloucek\",\"Jakov Novak\",\"Brett Stapley\",\"Matthew Thiessen\",\"Luke Loheit\",\"Pavel Shen\",\"Ty Taylor\",\"Austin Wong\",\"Riley Hughes\"],\"y\":[0,10,0,0,15,0,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\"type\":\"bar\",\"name\":\"7\",\"marker\":{\"color\":\"rgba(253,231,37,1)\",\"line\":{\"color\":\"rgba(253,231,37,1)\"}},\"textfont\":{\"color\":\"rgba(253,231,37,1)\"},\"error_y\":{\"color\":\"rgba(253,231,37,1)\"},\"error_x\":{\"color\":\"rgba(253,231,37,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.2,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n::: callout-note\nI tried to suppress the warning messages here by `suppressWarnings()` but failed.\n:::\n## STACKED BAR?\n\nStacked bar charts use two keys and one value.  Can we leverage this idiom?  Perhaps if we used both `round` and `postdraft` as our keys and NHLgames as our value...  \n\nThe idea here is that we might be able to get a sense of the temporal pattern of NHL games after a player is drafted.  Do first round picks join the NHL earlier?  Do they stay in the NHL longer?  That kind of thing.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(draft2018, aes(x = postdraft, y=NHLgames, fill=as.factor(round)))+\n  geom_col(position = \"stack\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\nThis seems like it has some potential, but it definitely needs some work (by you):\n\n1. You know the drill by now.  Caption! Labels!\n2. Improve the color palette.\n3. Do we really only want data from the 2018 draft class?\n4. Consider the order of rounds within the stack (glyph).  Which round is most important?  Change the order within the glyphs to reflect this.\n\n### Solution\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(draft2018, aes(x = as.factor(postdraft), y=NHLgames, fill=factor(round, levels = rev(unique(round)))))+\n  geom_col(position = \"stack\")+\n  scale_fill_viridis(discrete = TRUE, direction = -1)+\nlabs(title = \"Fig 5.1 NHLgames for the players according to postdraft\",\n     subtitle = \"Channel: Length, Color, Mark: Line\",\n     caption = \"The draft year of 2018\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\n::: callout-note\nI don't quite understand the question:\n> Do we really only want data from the 2018 draft class?\n\nDo you mean we should plot other stacked charts with different x-axis?\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(draft2018, aes(x = as.factor(pickinRound), y=NHLgames, fill=factor(round, levels = rev(unique(round)))))+\n  geom_col(position = \"stack\")+\n  scale_fill_viridis(discrete = TRUE, direction = -1)+\nlabs(title = \"Fig 5.2 NHLgames for the players according to pickinRound\",\n     subtitle = \"Channel: Length, Color, Mark: Line\",\n     caption = \"The draft year of 2018\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n## PIE CHARTS / NORMALIZED BAR CHARTS\n\nWe all know that Pie Charts are rarely a good choice, but let's look at how to make one here.  I'll eliminate all the players drafted in 2018 who never played an NHL game, leaving us 80 players drafted in that year who made \"THE SHOW\".  Let's look at how those 80 players were drafted:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplayedNHL2018 <- drafttot2018%>%\n  filter(totgames>0)\n\nggplot(playedNHL2018, aes(x = \"\", fill = factor(round))) +\n  geom_bar(width = 1) +\n  coord_polar(theta = \"y\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\nObviously this isn't great, but can you state why?  Write a little critique of this visualizaiton that:\n\n1. Considers a player who played hundreds of games over their first five years vs a player who played one game in five years.\n2. Evaluates the relative value of a second round pick and a third round pick.\n\n### My critique\n1. This pie chart presented all the players with positive values in 2018 NHL games, but neglected the number of the games, which weaken the values of frequent game players within each round.\n\n2. The pie chart without a proper legend will result in a difficulty to reader to quickly recognize the difference between similar valued pies.\n\n\nNow let's change this to account for the various years post draft:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nseasonplayedNHL2018 <- draft2018%>%\n  filter(NHLgames>0)\n\n\nggplot(seasonplayedNHL2018, aes(x = \"\", fill = factor(round))) +\n  geom_bar(width = 1) +\n  coord_polar(theta = \"y\")+\n  facet_wrap(~postdraft)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\nSeems like there is something to work with here, but let's compare this to a normalized bar chart:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(draft2018, aes(x = postdraft, y=NHLgames, fill=as.factor(round)))+\n  geom_col(position = \"fill\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 218 rows containing missing values (geom_col).\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n\nCan you work with this to make it a useful visualization for your friend, Cassandra Canuck?\n\n### Solution\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(draft2018, aes(x = as.factor(postdraft), y = NHLgames, fill = as.factor(round))) +\n  geom_bar(stat = \"identity\", position = \"stack\")+\nlabs(title = \"Fig 6.1 NHLgames for postdraft\",\n     subtitle = \"Channel: Length, Color; Mark: Line\",\n     caption = \"The draft year of 2018\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n\n## HEATMAP?\n\nCould this be useful?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nround1<-NHLDraft%>%\n  filter(round==1)\n\nggplot(round1, aes(y = reorder(name, overall), x = postdraft, fill = NHLgames)) +\n  geom_tile() +\n  scale_fill_gradient(low = \"blue\", high = \"red\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n\n### Solution\n\n::: {.cell}\n\n:::\n\n\n## OTHER STUFF TO CONSIDER\n\n1. Do these visualizations change as a function of player position?\n2. Is the number of NHL games played really the best metric to use?\n\n### Solution\n\n1. Some visualizations considered the position of the players, e.g. Fig 3.1, 3.2. Therefore the scatters will change subject to the change in position data. But some other visualization grouped the position values in a round, therefore the change won't reflected in the results of visualization.\n\n2. The NHL games and totgames share the same tendency that the players with prior round tend to have more games. NHL games as a more competitive game can stand for a better performance of a player, but this value can be very limited in the early years for a young play. In that situation, the totgames would be a better choice to delineate the value of early-career players.\n\n## CONCLUSION\n\nBased on your visualizations, what would you advise regarding this trade proposal?  Why?\n\n### Solution\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/htmlwidgets-1.5.4/htmlwidgets.js\"></script>\n<script src=\"../../site_libs/plotly-binding-4.10.1/plotly.js\"></script>\n<script src=\"../../site_libs/typedarray-0.1/typedarray.min.js\"></script>\n<script src=\"../../site_libs/jquery-3.5.1/jquery.min.js\"></script>\n<link href=\"../../site_libs/crosstalk-1.2.0/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/crosstalk-1.2.0/js/crosstalk.min.js\"></script>\n<link href=\"../../site_libs/plotly-htmlwidgets-css-2.11.1/plotly-htmlwidgets.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/plotly-main-2.11.1/plotly-latest.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}