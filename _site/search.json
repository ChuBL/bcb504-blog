[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "My First Blog",
    "section": "",
    "text": "Post With Code\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nFeb 2, 2023\n\n\nHarlow Malloc\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAssignment 2: Your Data\n\n\nDescribing the dataset\n\n\n\n\n\n\n\n\n\nJan 31, 2023\n\n\nJiyin Zhang\n\n\n\n\n\n\n  \n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nJan 30, 2023\n\n\nTristan O’Malley\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAssignment 2: Your Data\n\n\nDescribing the dataset\n\n\n\n\n\n\n\n\n\nJan 26, 2023\n\n\nJiyin Zhang\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAssignment 2: Plain Text\n\n\nDescribing the dataset\n\n\n\n\n\n\n\n\n\nJan 26, 2023\n\n\nJiyin Zhang\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "This is my first blog created via quarto."
  },
  {
    "objectID": "posts/assignment-2-old-ver/index.html",
    "href": "posts/assignment-2-old-ver/index.html",
    "title": "Assignment 2: Your Data",
    "section": "",
    "text": "This dataset is generated based on the elements coexistence counts from Mindat.org database. The original data source is retrieved via Mindat API and stored in JSON format. Then after data pre-process and data cleaning steps, the retrieved data is cured and stored in CSV format. The dataset can be accessed at the Github repository, in the name of total_elements_mindat.csv.\n\n\n\n\n\n\nNote\n\n\n\nThe CSV file of dataset is a concatenated version of 72 separate spread sheets of element triplets coexistence values. Each spread sheet has 2 + 72 columns, the first column indicates the background element, which should remain the same throughout each separate sheet. The second column records the second dimension of the element triplets Then the third dimension of elements are listed by the remaining columns. The value of cell \\((i, j)\\) indicating the coexistence amount of three elements: the first two elements in \\((i, 0)\\) and \\((i, 1)\\), and the third element in \\((0, j)\\).\n\n\n\n\nThe dataset was retrieved via Mindat API as a JSON file. In the data preprocessing step, the elements information are extracted and statistically recorded in a new JSON file. Then I reorganized the data into 72 spread sheets as CSV formats."
  },
  {
    "objectID": "posts/assignment-2-old-ver/index.html#importing-the-data",
    "href": "posts/assignment-2-old-ver/index.html#importing-the-data",
    "title": "Assignment 2: Your Data",
    "section": "IMPORTING THE DATA",
    "text": "IMPORTING THE DATA\nI’m going to use the built-in read.csv package to import CSV file.\n\n\nCode\nlibrary(tidyverse)\n# result <- read.csv(file = 'total_elements_mindat.csv')\nresult <- read.csv(file = 'total_elements_mindat.csv')\n\n\nThe glimpse command in the Tidyverse package is a nice way to summarize the data frame:\n\n\nCode\nglimpse(result)\n\n\nRows: 5,184\nColumns: 74\n$ zaxis <chr> \"H\", \"H\", \"H\", \"H\", \"H\", \"H\", \"H\", \"H\", \"H\", \"H\", \"H\", \"H\", \"H\",…\n$ yaxis <chr> \"H\", \"Li\", \"Be\", \"B\", \"C\", \"N\", \"O\", \"F\", \"Na\", \"Mg\", \"Al\", \"Si\"…\n$ H     <int> 3228, 51, 66, 193, 330, 128, 3205, 141, 643, 472, 817, 1023, 524…\n$ Li    <int> 51, 51, 4, 8, 2, 0, 51, 4, 19, 6, 25, 39, 9, 1, 1, 6, 8, 0, 6, 0…\n$ Be    <int> 66, 4, 66, 3, 1, 0, 66, 1, 13, 4, 8, 31, 27, 0, 0, 4, 34, 0, 0, …\n$ B     <int> 193, 8, 3, 193, 13, 3, 192, 10, 50, 55, 52, 73, 3, 8, 24, 9, 89,…\n$ C     <int> 330, 2, 1, 13, 330, 23, 317, 12, 65, 55, 50, 46, 17, 30, 19, 11,…\n$ N     <int> 128, 0, 0, 3, 23, 128, 118, 5, 23, 13, 22, 10, 18, 48, 23, 6, 8,…\n$ O     <int> 3205, 51, 66, 192, 317, 118, 3205, 138, 643, 472, 817, 1021, 524…\n$ F     <int> 141, 4, 1, 10, 12, 5, 138, 141, 54, 22, 79, 58, 30, 24, 8, 14, 5…\n$ Na    <int> 643, 19, 13, 50, 65, 23, 643, 54, 643, 106, 182, 356, 89, 102, 3…\n$ Mg    <int> 472, 6, 4, 55, 55, 13, 472, 22, 106, 472, 147, 161, 86, 61, 28, …\n$ Al    <int> 817, 25, 8, 52, 50, 22, 817, 79, 182, 147, 817, 401, 169, 135, 3…\n$ Si    <int> 1023, 39, 31, 73, 46, 10, 1021, 58, 356, 161, 401, 1023, 15, 36,…\n$ P     <int> 524, 9, 27, 3, 17, 18, 524, 30, 89, 86, 169, 15, 524, 21, 1, 32,…\n$ S     <int> 531, 1, 0, 8, 30, 48, 531, 24, 102, 61, 135, 36, 21, 531, 27, 53…\n$ Cl    <int> 210, 1, 0, 24, 19, 23, 204, 8, 39, 28, 33, 36, 1, 27, 210, 26, 5…\n$ K     <int> 287, 6, 4, 9, 11, 6, 287, 14, 82, 50, 81, 162, 32, 53, 26, 287, …\n$ Ca    <int> 918, 8, 34, 89, 97, 8, 918, 58, 187, 131, 269, 424, 134, 84, 53,…\n$ Sc    <int> 8, 0, 0, 0, 0, 0, 8, 0, 1, 3, 0, 4, 3, 0, 0, 0, 5, 8, 0, 0, 0, 0…\n$ Ti    <int> 145, 6, 0, 3, 2, 0, 145, 18, 81, 11, 9, 116, 9, 2, 2, 30, 32, 0,…\n$ V     <int> 181, 0, 0, 3, 6, 8, 180, 2, 28, 24, 31, 27, 14, 12, 3, 10, 55, 0…\n$ Cr    <int> 40, 0, 0, 4, 5, 0, 40, 2, 7, 11, 4, 13, 2, 6, 3, 3, 11, 0, 1, 2,…\n$ Mn    <int> 406, 4, 9, 15, 17, 2, 406, 14, 81, 42, 70, 185, 98, 23, 17, 28, …\n$ Fe    <int> 663, 11, 9, 18, 22, 18, 663, 15, 130, 78, 136, 216, 176, 122, 32…\n$ Co    <int> 35, 0, 0, 0, 4, 1, 35, 0, 3, 0, 1, 1, 1, 12, 2, 0, 4, 0, 0, 1, 0…\n$ Ni    <int> 63, 0, 0, 0, 12, 4, 62, 0, 2, 1, 6, 7, 2, 15, 5, 1, 4, 0, 0, 2, …\n$ Cu    <int> 359, 1, 0, 4, 36, 10, 358, 6, 16, 16, 39, 29, 40, 87, 61, 16, 50…\n$ Zn    <int> 208, 0, 3, 0, 15, 1, 208, 1, 11, 16, 23, 32, 44, 46, 7, 7, 29, 0…\n$ Ga    <int> 4, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Ge    <int> 10, 0, 0, 0, 1, 0, 10, 0, 0, 0, 3, 1, 0, 4, 0, 0, 2, 0, 0, 0, 0,…\n$ As    <int> 397, 0, 3, 2, 4, 5, 397, 3, 36, 40, 42, 17, 9, 21, 14, 12, 112, …\n$ Se    <int> 26, 0, 0, 0, 0, 0, 26, 0, 2, 1, 4, 1, 0, 3, 2, 1, 3, 0, 0, 0, 0,…\n$ Br    <int> 3, 0, 0, 0, 0, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Rb    <int> 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Sr    <int> 77, 1, 0, 9, 12, 0, 77, 6, 23, 4, 30, 30, 15, 5, 2, 4, 20, 0, 8,…\n$ Y     <int> 54, 1, 1, 2, 27, 0, 54, 5, 18, 1, 13, 21, 6, 6, 2, 2, 18, 0, 2, …\n$ Zr    <int> 70, 1, 3, 2, 9, 0, 70, 3, 56, 2, 1, 58, 9, 1, 10, 10, 31, 0, 1, …\n$ Nb    <int> 54, 0, 0, 0, 4, 0, 54, 4, 26, 4, 1, 32, 4, 1, 2, 12, 17, 0, 7, 1…\n$ Mo    <int> 49, 0, 0, 0, 0, 1, 49, 0, 6, 4, 3, 0, 6, 5, 0, 4, 9, 0, 0, 0, 0,…\n$ Ru    <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Rh    <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Pd    <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Ag    <int> 3, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 1, 2, 1, 0, 0, 0, 0, 0, 0…\n$ Cd    <int> 12, 0, 0, 0, 0, 0, 12, 1, 0, 0, 1, 0, 2, 8, 0, 1, 0, 0, 0, 0, 0,…\n$ In    <int> 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Sn    <int> 21, 0, 2, 1, 0, 1, 20, 0, 2, 2, 2, 8, 0, 1, 2, 0, 7, 1, 0, 0, 0,…\n$ Sb    <int> 32, 0, 0, 0, 0, 0, 32, 0, 4, 2, 5, 2, 0, 10, 3, 2, 5, 0, 2, 0, 0…\n$ Te    <int> 52, 0, 0, 0, 2, 0, 52, 0, 0, 8, 1, 0, 0, 9, 7, 0, 6, 0, 0, 0, 1,…\n$ I     <int> 12, 0, 0, 0, 0, 1, 12, 0, 3, 3, 0, 0, 0, 1, 3, 2, 3, 0, 0, 0, 2,…\n$ Cs    <int> 12, 0, 1, 1, 0, 0, 12, 2, 4, 0, 2, 8, 1, 0, 0, 1, 4, 0, 2, 1, 0,…\n$ Ba    <int> 134, 2, 3, 4, 12, 0, 134, 16, 42, 11, 34, 76, 32, 5, 9, 8, 18, 1…\n$ La    <int> 29, 0, 0, 0, 7, 0, 29, 0, 3, 1, 14, 15, 3, 0, 0, 0, 10, 0, 1, 1,…\n$ Ce    <int> 77, 0, 2, 5, 16, 0, 77, 8, 17, 10, 25, 47, 8, 4, 1, 1, 28, 0, 13…\n$ Nd    <int> 19, 0, 1, 0, 8, 0, 19, 1, 1, 0, 3, 5, 3, 2, 0, 0, 5, 0, 0, 0, 0,…\n$ Sm    <int> 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Gd    <int> 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0…\n$ Dy    <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Er    <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Yb    <int> 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Hf    <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Ta    <int> 5, 0, 0, 0, 0, 0, 5, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0…\n$ W     <int> 22, 0, 0, 0, 1, 0, 22, 0, 5, 1, 2, 3, 1, 0, 0, 0, 7, 0, 0, 1, 0,…\n$ Re    <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Os    <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Ir    <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Pt    <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Au    <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Hg    <int> 11, 0, 0, 0, 3, 4, 10, 0, 0, 0, 1, 0, 1, 1, 4, 0, 0, 0, 0, 0, 0,…\n$ Tl    <int> 7, 0, 0, 0, 0, 0, 7, 0, 0, 0, 1, 0, 0, 4, 2, 2, 0, 0, 0, 2, 0, 0…\n$ Pb    <int> 229, 0, 1, 5, 28, 3, 228, 6, 3, 7, 27, 32, 27, 54, 39, 3, 13, 0,…\n$ Bi    <int> 42, 0, 0, 0, 0, 2, 41, 0, 1, 1, 1, 1, 11, 4, 1, 0, 1, 0, 0, 5, 1…\n$ Th    <int> 15, 0, 0, 1, 2, 0, 15, 2, 2, 0, 2, 4, 5, 0, 0, 1, 3, 0, 1, 0, 0,…\n$ U     <int> 272, 1, 0, 0, 41, 12, 272, 8, 33, 24, 21, 20, 51, 61, 2, 27, 54,…"
  },
  {
    "objectID": "posts/assignment-2-old-ver/index.html#describe-the-data",
    "href": "posts/assignment-2-old-ver/index.html#describe-the-data",
    "title": "Assignment 2: Your Data",
    "section": "DESCRIBE THE DATA",
    "text": "DESCRIBE THE DATA\n\nData Set Type\nThe dataset is stored as a great Flat Table, the items are arranged as each of the 72 elements, with the attributes of element triplets coexistence in the cells of corresponding sheets.\n\n\nElement list\nc('H', 'Li', 'Be', 'B', 'C', 'N', 'O', 'F', 'Na', 'Mg', 'Al', 'Si', 'P', 'S', 'Cl', 'K', 'Ca', 'Sc', 'Ti', 'V', 'Cr', 'Mn', 'Fe', 'Co', 'Ni', 'Cu', 'Zn', 'Ga', 'Ge', 'As', 'Se', 'Br', 'Rb', 'Sr', 'Y', 'Zr', 'Nb', 'Mo', 'Ru', 'Rh', 'Pd', 'Ag', 'Cd', 'In', 'Sn', 'Sb', 'Te', 'I', 'Cs', 'Ba', 'La', 'Ce', 'Nd', 'Sm', 'Gd', 'Dy', 'Er', 'Yb', 'Hf', 'Ta', 'W', 'Re', 'Os', 'Ir', 'Pt', 'Au', 'Hg', 'Tl', 'Pb', 'Bi', 'Th', 'U')\n\n\n [1] \"H\"  \"Li\" \"Be\" \"B\"  \"C\"  \"N\"  \"O\"  \"F\"  \"Na\" \"Mg\" \"Al\" \"Si\" \"P\"  \"S\"  \"Cl\"\n[16] \"K\"  \"Ca\" \"Sc\" \"Ti\" \"V\"  \"Cr\" \"Mn\" \"Fe\" \"Co\" \"Ni\" \"Cu\" \"Zn\" \"Ga\" \"Ge\" \"As\"\n[31] \"Se\" \"Br\" \"Rb\" \"Sr\" \"Y\"  \"Zr\" \"Nb\" \"Mo\" \"Ru\" \"Rh\" \"Pd\" \"Ag\" \"Cd\" \"In\" \"Sn\"\n[46] \"Sb\" \"Te\" \"I\"  \"Cs\" \"Ba\" \"La\" \"Ce\" \"Nd\" \"Sm\" \"Gd\" \"Dy\" \"Er\" \"Yb\" \"Hf\" \"Ta\"\n[61] \"W\"  \"Re\" \"Os\" \"Ir\" \"Pt\" \"Au\" \"Hg\" \"Tl\" \"Pb\" \"Bi\" \"Th\" \"U\" \n\n\n\n\nAttribute Types\nThe attributes of the data are recorded in a 2-dimensional format, therefore the data frame rows will looks similar to the result of glimpse function.\n\n\nCode\nhead(result)\n\n\n  zaxis yaxis    H Li Be   B   C   N    O   F  Na  Mg  Al   Si   P   S  Cl   K\n1     H     H 3228 51 66 193 330 128 3205 141 643 472 817 1023 524 531 210 287\n2     H    Li   51 51  4   8   2   0   51   4  19   6  25   39   9   1   1   6\n3     H    Be   66  4 66   3   1   0   66   1  13   4   8   31  27   0   0   4\n4     H     B  193  8  3 193  13   3  192  10  50  55  52   73   3   8  24   9\n5     H     C  330  2  1  13 330  23  317  12  65  55  50   46  17  30  19  11\n6     H     N  128  0  0   3  23 128  118   5  23  13  22   10  18  48  23   6\n   Ca Sc  Ti   V Cr  Mn  Fe Co Ni  Cu  Zn Ga Ge  As Se Br Rb Sr  Y Zr Nb Mo Ru\n1 918  8 145 181 40 406 663 35 63 359 208  4 10 397 26  3  1 77 54 70 54 49  0\n2   8  0   6   0  0   4  11  0  0   1   0  0  0   0  0  0  0  1  1  1  0  0  0\n3  34  0   0   0  0   9   9  0  0   0   3  0  0   3  0  0  0  0  1  3  0  0  0\n4  89  0   3   3  4  15  18  0  0   4   0  0  0   2  0  0  1  9  2  2  0  0  0\n5  97  0   2   6  5  17  22  4 12  36  15  0  1   4  0  0  0 12 27  9  4  0  0\n6   8  0   0   8  0   2  18  1  4  10   1  0  0   5  0  1  0  0  0  0  0  1  0\n  Rh Pd Ag Cd In Sn Sb Te  I Cs  Ba La Ce Nd Sm Gd Dy Er Yb Hf Ta  W Re Os Ir\n1  0  0  3 12  2 21 32 52 12 12 134 29 77 19  1  1  0  0  1  0  5 22  0  0  0\n2  0  0  0  0  0  0  0  0  0  0   2  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n3  0  0  0  0  0  2  0  0  0  1   3  0  2  1  0  0  0  0  1  0  0  0  0  0  0\n4  0  0  0  0  0  1  0  0  0  1   4  0  5  0  0  0  0  0  0  0  0  0  0  0  0\n5  0  0  0  0  0  0  0  2  0  0  12  7 16  8  0  1  0  0  0  0  0  1  0  0  0\n6  0  0  0  0  0  1  0  0  1  0   0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Pt Au Hg Tl  Pb Bi Th   U\n1  0  0 11  7 229 42 15 272\n2  0  0  0  0   0  0  0   1\n3  0  0  0  0   1  0  0   0\n4  0  0  0  0   5  0  1   0\n5  0  0  3  0  28  0  2  41\n6  0  0  4  0   3  2  0  12"
  },
  {
    "objectID": "posts/assignment-2-old-ver/index.html#question",
    "href": "posts/assignment-2-old-ver/index.html#question",
    "title": "Assignment 2: Your Data",
    "section": "Question",
    "text": "Question\n\n\n\n\n\n\nNote\n\n\n\n\nI have no idea why the render result of this .qmd file failed to adapt to the html style.\n\nThe problem is that the .qmd file shall not consist of the hashtag # symbol."
  },
  {
    "objectID": "posts/Poor-Assignment-2-in-plain-text/Assignment#2.html",
    "href": "posts/Poor-Assignment-2-in-plain-text/Assignment#2.html",
    "title": "Assignment 2: Your Data",
    "section": "",
    "text": "This dataset is generated based on the elements coexistence counts from Mindat.org database. The original data source is retrieved via Mindat API and stored in JSON format. Then after data pre-process and data cleaning steps, the retrieved data is cured and stored in CSV format. The dataset can be accessed at the Github repository, in the name of total_elements_mindat.csv.\n\n\n\n\n\n\nNote\n\n\n\nThe CSV file of dataset is a concatenated version of 72 separate spread sheets of element triplets coexistence values. Each spread sheet has 2 + 72 columns, the first column indicates the background element, which should remain the same throughout each separate sheet. The second column records the second dimension of the element triplets Then the third dimension of elements are listed by the remaining columns. The value of cell \\((i, j)\\) indicating the coexistence amount of three elements: the first two elements in \\((i, 0)\\) and \\((i, 1)\\), and the third element in \\((0, j)\\).\n\n\n\n\nThe dataset was retrieved via Mindat API as a JSON file. In the data preprocessing step, the elements information are extracted and statistically recorded in a new JSON file. Then I reorganized the data into 72 spread sheets as CSV formats."
  },
  {
    "objectID": "posts/Poor-Assignment-2-in-plain-text/Assignment#2.html#importing-the-data",
    "href": "posts/Poor-Assignment-2-in-plain-text/Assignment#2.html#importing-the-data",
    "title": "Assignment 2: Your Data",
    "section": "IMPORTING THE DATA",
    "text": "IMPORTING THE DATA\nI’m going to use the built-in read.csv package to import CSV file.\n\n\nCode\nlibrary(tidyverse)\nresult <- read.csv(file = 'total_elements_mindat.csv')\n\n\nThe glimpse command in the Tidyverse package is a nice way to summarize the data frame:\n\n\nCode\nglimpse(result)\n\n\nRows: 5,184\nColumns: 74\n$ zaxis <chr> \"H\", \"H\", \"H\", \"H\", \"H\", \"H\", \"H\", \"H\", \"H\", \"H\", \"H\", \"H\", \"H\",…\n$ yaxis <chr> \"H\", \"Li\", \"Be\", \"B\", \"C\", \"N\", \"O\", \"F\", \"Na\", \"Mg\", \"Al\", \"Si\"…\n$ H     <int> 3228, 51, 66, 193, 330, 128, 3205, 141, 643, 472, 817, 1023, 524…\n$ Li    <int> 51, 51, 4, 8, 2, 0, 51, 4, 19, 6, 25, 39, 9, 1, 1, 6, 8, 0, 6, 0…\n$ Be    <int> 66, 4, 66, 3, 1, 0, 66, 1, 13, 4, 8, 31, 27, 0, 0, 4, 34, 0, 0, …\n$ B     <int> 193, 8, 3, 193, 13, 3, 192, 10, 50, 55, 52, 73, 3, 8, 24, 9, 89,…\n$ C     <int> 330, 2, 1, 13, 330, 23, 317, 12, 65, 55, 50, 46, 17, 30, 19, 11,…\n$ N     <int> 128, 0, 0, 3, 23, 128, 118, 5, 23, 13, 22, 10, 18, 48, 23, 6, 8,…\n$ O     <int> 3205, 51, 66, 192, 317, 118, 3205, 138, 643, 472, 817, 1021, 524…\n$ F     <int> 141, 4, 1, 10, 12, 5, 138, 141, 54, 22, 79, 58, 30, 24, 8, 14, 5…\n$ Na    <int> 643, 19, 13, 50, 65, 23, 643, 54, 643, 106, 182, 356, 89, 102, 3…\n$ Mg    <int> 472, 6, 4, 55, 55, 13, 472, 22, 106, 472, 147, 161, 86, 61, 28, …\n$ Al    <int> 817, 25, 8, 52, 50, 22, 817, 79, 182, 147, 817, 401, 169, 135, 3…\n$ Si    <int> 1023, 39, 31, 73, 46, 10, 1021, 58, 356, 161, 401, 1023, 15, 36,…\n$ P     <int> 524, 9, 27, 3, 17, 18, 524, 30, 89, 86, 169, 15, 524, 21, 1, 32,…\n$ S     <int> 531, 1, 0, 8, 30, 48, 531, 24, 102, 61, 135, 36, 21, 531, 27, 53…\n$ Cl    <int> 210, 1, 0, 24, 19, 23, 204, 8, 39, 28, 33, 36, 1, 27, 210, 26, 5…\n$ K     <int> 287, 6, 4, 9, 11, 6, 287, 14, 82, 50, 81, 162, 32, 53, 26, 287, …\n$ Ca    <int> 918, 8, 34, 89, 97, 8, 918, 58, 187, 131, 269, 424, 134, 84, 53,…\n$ Sc    <int> 8, 0, 0, 0, 0, 0, 8, 0, 1, 3, 0, 4, 3, 0, 0, 0, 5, 8, 0, 0, 0, 0…\n$ Ti    <int> 145, 6, 0, 3, 2, 0, 145, 18, 81, 11, 9, 116, 9, 2, 2, 30, 32, 0,…\n$ V     <int> 181, 0, 0, 3, 6, 8, 180, 2, 28, 24, 31, 27, 14, 12, 3, 10, 55, 0…\n$ Cr    <int> 40, 0, 0, 4, 5, 0, 40, 2, 7, 11, 4, 13, 2, 6, 3, 3, 11, 0, 1, 2,…\n$ Mn    <int> 406, 4, 9, 15, 17, 2, 406, 14, 81, 42, 70, 185, 98, 23, 17, 28, …\n$ Fe    <int> 663, 11, 9, 18, 22, 18, 663, 15, 130, 78, 136, 216, 176, 122, 32…\n$ Co    <int> 35, 0, 0, 0, 4, 1, 35, 0, 3, 0, 1, 1, 1, 12, 2, 0, 4, 0, 0, 1, 0…\n$ Ni    <int> 63, 0, 0, 0, 12, 4, 62, 0, 2, 1, 6, 7, 2, 15, 5, 1, 4, 0, 0, 2, …\n$ Cu    <int> 359, 1, 0, 4, 36, 10, 358, 6, 16, 16, 39, 29, 40, 87, 61, 16, 50…\n$ Zn    <int> 208, 0, 3, 0, 15, 1, 208, 1, 11, 16, 23, 32, 44, 46, 7, 7, 29, 0…\n$ Ga    <int> 4, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Ge    <int> 10, 0, 0, 0, 1, 0, 10, 0, 0, 0, 3, 1, 0, 4, 0, 0, 2, 0, 0, 0, 0,…\n$ As    <int> 397, 0, 3, 2, 4, 5, 397, 3, 36, 40, 42, 17, 9, 21, 14, 12, 112, …\n$ Se    <int> 26, 0, 0, 0, 0, 0, 26, 0, 2, 1, 4, 1, 0, 3, 2, 1, 3, 0, 0, 0, 0,…\n$ Br    <int> 3, 0, 0, 0, 0, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Rb    <int> 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Sr    <int> 77, 1, 0, 9, 12, 0, 77, 6, 23, 4, 30, 30, 15, 5, 2, 4, 20, 0, 8,…\n$ Y     <int> 54, 1, 1, 2, 27, 0, 54, 5, 18, 1, 13, 21, 6, 6, 2, 2, 18, 0, 2, …\n$ Zr    <int> 70, 1, 3, 2, 9, 0, 70, 3, 56, 2, 1, 58, 9, 1, 10, 10, 31, 0, 1, …\n$ Nb    <int> 54, 0, 0, 0, 4, 0, 54, 4, 26, 4, 1, 32, 4, 1, 2, 12, 17, 0, 7, 1…\n$ Mo    <int> 49, 0, 0, 0, 0, 1, 49, 0, 6, 4, 3, 0, 6, 5, 0, 4, 9, 0, 0, 0, 0,…\n$ Ru    <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Rh    <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Pd    <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Ag    <int> 3, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 1, 2, 1, 0, 0, 0, 0, 0, 0…\n$ Cd    <int> 12, 0, 0, 0, 0, 0, 12, 1, 0, 0, 1, 0, 2, 8, 0, 1, 0, 0, 0, 0, 0,…\n$ In    <int> 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Sn    <int> 21, 0, 2, 1, 0, 1, 20, 0, 2, 2, 2, 8, 0, 1, 2, 0, 7, 1, 0, 0, 0,…\n$ Sb    <int> 32, 0, 0, 0, 0, 0, 32, 0, 4, 2, 5, 2, 0, 10, 3, 2, 5, 0, 2, 0, 0…\n$ Te    <int> 52, 0, 0, 0, 2, 0, 52, 0, 0, 8, 1, 0, 0, 9, 7, 0, 6, 0, 0, 0, 1,…\n$ I     <int> 12, 0, 0, 0, 0, 1, 12, 0, 3, 3, 0, 0, 0, 1, 3, 2, 3, 0, 0, 0, 2,…\n$ Cs    <int> 12, 0, 1, 1, 0, 0, 12, 2, 4, 0, 2, 8, 1, 0, 0, 1, 4, 0, 2, 1, 0,…\n$ Ba    <int> 134, 2, 3, 4, 12, 0, 134, 16, 42, 11, 34, 76, 32, 5, 9, 8, 18, 1…\n$ La    <int> 29, 0, 0, 0, 7, 0, 29, 0, 3, 1, 14, 15, 3, 0, 0, 0, 10, 0, 1, 1,…\n$ Ce    <int> 77, 0, 2, 5, 16, 0, 77, 8, 17, 10, 25, 47, 8, 4, 1, 1, 28, 0, 13…\n$ Nd    <int> 19, 0, 1, 0, 8, 0, 19, 1, 1, 0, 3, 5, 3, 2, 0, 0, 5, 0, 0, 0, 0,…\n$ Sm    <int> 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Gd    <int> 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0…\n$ Dy    <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Er    <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Yb    <int> 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Hf    <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Ta    <int> 5, 0, 0, 0, 0, 0, 5, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0…\n$ W     <int> 22, 0, 0, 0, 1, 0, 22, 0, 5, 1, 2, 3, 1, 0, 0, 0, 7, 0, 0, 1, 0,…\n$ Re    <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Os    <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Ir    <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Pt    <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Au    <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Hg    <int> 11, 0, 0, 0, 3, 4, 10, 0, 0, 0, 1, 0, 1, 1, 4, 0, 0, 0, 0, 0, 0,…\n$ Tl    <int> 7, 0, 0, 0, 0, 0, 7, 0, 0, 0, 1, 0, 0, 4, 2, 2, 0, 0, 0, 2, 0, 0…\n$ Pb    <int> 229, 0, 1, 5, 28, 3, 228, 6, 3, 7, 27, 32, 27, 54, 39, 3, 13, 0,…\n$ Bi    <int> 42, 0, 0, 0, 0, 2, 41, 0, 1, 1, 1, 1, 11, 4, 1, 0, 1, 0, 0, 5, 1…\n$ Th    <int> 15, 0, 0, 1, 2, 0, 15, 2, 2, 0, 2, 4, 5, 0, 0, 1, 3, 0, 1, 0, 0,…\n$ U     <int> 272, 1, 0, 0, 41, 12, 272, 8, 33, 24, 21, 20, 51, 61, 2, 27, 54,…"
  },
  {
    "objectID": "posts/Poor-Assignment-2-in-plain-text/Assignment#2.html#describe-the-data",
    "href": "posts/Poor-Assignment-2-in-plain-text/Assignment#2.html#describe-the-data",
    "title": "Assignment 2: Your Data",
    "section": "DESCRIBE THE DATA",
    "text": "DESCRIBE THE DATA\n\nData Set Type\nThe dataset is stored as a great Flat Table, the items are arranged as each of the 72 elements, with the attributes of element triplets coexistence in the cells of corresponding sheets.\n\n\nElement list\nc('H', 'Li', 'Be', 'B', 'C', 'N', 'O', 'F', 'Na', 'Mg', 'Al', 'Si', 'P', 'S', 'Cl', 'K', 'Ca', 'Sc', 'Ti', 'V', 'Cr', 'Mn', 'Fe', 'Co', 'Ni', 'Cu', 'Zn', 'Ga', 'Ge', 'As', 'Se', 'Br', 'Rb', 'Sr', 'Y', 'Zr', 'Nb', 'Mo', 'Ru', 'Rh', 'Pd', 'Ag', 'Cd', 'In', 'Sn', 'Sb', 'Te', 'I', 'Cs', 'Ba', 'La', 'Ce', 'Nd', 'Sm', 'Gd', 'Dy', 'Er', 'Yb', 'Hf', 'Ta', 'W', 'Re', 'Os', 'Ir', 'Pt', 'Au', 'Hg', 'Tl', 'Pb', 'Bi', 'Th', 'U')\n\n\n [1] \"H\"  \"Li\" \"Be\" \"B\"  \"C\"  \"N\"  \"O\"  \"F\"  \"Na\" \"Mg\" \"Al\" \"Si\" \"P\"  \"S\"  \"Cl\"\n[16] \"K\"  \"Ca\" \"Sc\" \"Ti\" \"V\"  \"Cr\" \"Mn\" \"Fe\" \"Co\" \"Ni\" \"Cu\" \"Zn\" \"Ga\" \"Ge\" \"As\"\n[31] \"Se\" \"Br\" \"Rb\" \"Sr\" \"Y\"  \"Zr\" \"Nb\" \"Mo\" \"Ru\" \"Rh\" \"Pd\" \"Ag\" \"Cd\" \"In\" \"Sn\"\n[46] \"Sb\" \"Te\" \"I\"  \"Cs\" \"Ba\" \"La\" \"Ce\" \"Nd\" \"Sm\" \"Gd\" \"Dy\" \"Er\" \"Yb\" \"Hf\" \"Ta\"\n[61] \"W\"  \"Re\" \"Os\" \"Ir\" \"Pt\" \"Au\" \"Hg\" \"Tl\" \"Pb\" \"Bi\" \"Th\" \"U\" \n\n\n\n\nAttribute Types\nThe attributes of the data are recorded in a 2-dimensional format, therefore the data frame rows will looks similar to the result of glimpse function.\n\n\nCode\nhead(result)\n\n\n  zaxis yaxis    H Li Be   B   C   N    O   F  Na  Mg  Al   Si   P   S  Cl   K\n1     H     H 3228 51 66 193 330 128 3205 141 643 472 817 1023 524 531 210 287\n2     H    Li   51 51  4   8   2   0   51   4  19   6  25   39   9   1   1   6\n3     H    Be   66  4 66   3   1   0   66   1  13   4   8   31  27   0   0   4\n4     H     B  193  8  3 193  13   3  192  10  50  55  52   73   3   8  24   9\n5     H     C  330  2  1  13 330  23  317  12  65  55  50   46  17  30  19  11\n6     H     N  128  0  0   3  23 128  118   5  23  13  22   10  18  48  23   6\n   Ca Sc  Ti   V Cr  Mn  Fe Co Ni  Cu  Zn Ga Ge  As Se Br Rb Sr  Y Zr Nb Mo Ru\n1 918  8 145 181 40 406 663 35 63 359 208  4 10 397 26  3  1 77 54 70 54 49  0\n2   8  0   6   0  0   4  11  0  0   1   0  0  0   0  0  0  0  1  1  1  0  0  0\n3  34  0   0   0  0   9   9  0  0   0   3  0  0   3  0  0  0  0  1  3  0  0  0\n4  89  0   3   3  4  15  18  0  0   4   0  0  0   2  0  0  1  9  2  2  0  0  0\n5  97  0   2   6  5  17  22  4 12  36  15  0  1   4  0  0  0 12 27  9  4  0  0\n6   8  0   0   8  0   2  18  1  4  10   1  0  0   5  0  1  0  0  0  0  0  1  0\n  Rh Pd Ag Cd In Sn Sb Te  I Cs  Ba La Ce Nd Sm Gd Dy Er Yb Hf Ta  W Re Os Ir\n1  0  0  3 12  2 21 32 52 12 12 134 29 77 19  1  1  0  0  1  0  5 22  0  0  0\n2  0  0  0  0  0  0  0  0  0  0   2  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n3  0  0  0  0  0  2  0  0  0  1   3  0  2  1  0  0  0  0  1  0  0  0  0  0  0\n4  0  0  0  0  0  1  0  0  0  1   4  0  5  0  0  0  0  0  0  0  0  0  0  0  0\n5  0  0  0  0  0  0  0  2  0  0  12  7 16  8  0  1  0  0  0  0  0  1  0  0  0\n6  0  0  0  0  0  1  0  0  1  0   0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Pt Au Hg Tl  Pb Bi Th   U\n1  0  0 11  7 229 42 15 272\n2  0  0  0  0   0  0  0   1\n3  0  0  0  0   1  0  0   0\n4  0  0  0  0   5  0  1   0\n5  0  0  3  0  28  0  2  41\n6  0  0  4  0   3  2  0  12"
  },
  {
    "objectID": "posts/Poor-Assignment-2-in-plain-text/Assignment#2.html#question",
    "href": "posts/Poor-Assignment-2-in-plain-text/Assignment#2.html#question",
    "title": "Assignment 2: Your Data",
    "section": "Question",
    "text": "Question\n\n\n\n\n\n\nNote\n\n\n\nI have no idea why the render result of this .qmd file failed to adapt to the html style."
  },
  {
    "objectID": "posts/assignment-2-ver2/index.html",
    "href": "posts/assignment-2-ver2/index.html",
    "title": "Assignment 2: Your Data",
    "section": "",
    "text": "This dataset is generated based on the elements coexistence counts from Mindat.org database. The original data source is retrieved via Mindat API and stored in JSON format. Then after data pre-process and data cleaning steps, the retrieved data is cured and stored in CSV format. The dataset can be accessed at the Github repository, in the name of mineral.csv.\n\n\n\n\n\nThe dataset was retrieved via Mindat API as a JSON file. In the data preprocessing step, the elements information are extracted in a new JSON file, in which some of the hierarchical structures have been removed in convenience of python’s to_csv function. Then the exported csv file can be read directly with R’s read.csv function."
  },
  {
    "objectID": "posts/assignment-2-ver2/index.html#importing-the-data",
    "href": "posts/assignment-2-ver2/index.html#importing-the-data",
    "title": "Assignment 2: Your Data",
    "section": "IMPORTING THE DATA",
    "text": "IMPORTING THE DATA\nI’m going to use the built-in read.csv package to import CSV file.\n\n\nCode\nlibrary(tidyverse)\n# result <- read.csv(file = 'total_elements_mindat.csv')\nresult <- read.csv(file = 'mineral.csv')\n\n\nThe glimpse command in the Tidyverse package is a nice way to summarize the data frame:\n\n\nCode\nglimpse(result)\n\n\nRows: 5,883\nColumns: 17\n$ id              <int> 1, 2, 3, 4, 9, 10, 13, 14, 18, 19, 21, 23, 27, 31, 32,…\n$ name            <chr> \"Abelsonite\", \"Abenakiite-(Ce)\", \"Abernathyite\", \"Abhu…\n$ elements        <chr> \"-Ni-N-C-H-\", \"-Ce-Na-Si-O-P-C-S-\", \"-As-O-K-H-U-\", \"-…\n$ sigelements     <chr> \"-Ni-N-C-H-\", \"-Ce-Na-Si-O-P-C-S-\", \"-As-O-K-H-U-\", \"-…\n$ yeardiscovery   <chr> \"1975\", \"\", \"1956\", \"1983\", \"1990\", \"1855\", \"1974\", \"1…\n$ hmin            <dbl> 2.0, 4.0, 2.5, 2.0, 6.5, 2.0, 1.0, 2.5, 5.0, 3.5, 3.5,…\n$ hmax            <dbl> 3.0, 5.0, 3.0, 2.0, 6.5, 2.5, 1.5, 2.5, 6.0, 3.5, 3.5,…\n$ hardtype        <int> 0, 0, 0, 3, 0, 3, 0, 0, 3, 0, 3, 0, 0, 0, 0, 0, 0, 0, …\n$ specificgravity <chr> \"1.4\", \"3.21\", \"\", \"4.29\", \"\", \"7.24 (calc)  7.2-7.4(m…\n$ strunz10ed1     <int> 10, 9, 8, 3, 9, 2, 10, 2, 9, 3, 8, 8, 6, 9, 9, 9, 9, 8…\n$ strunz10ed2     <chr> \"C\", \"C\", \"E\", \"D\", \"A\", \"B\", \"A\", \"C\", \"D\", \"C\", \"B\",…\n$ strunz10ed3     <chr> \"A\", \"K\", \"B\", \"A\", \"G\", \"A\", \"A\", \"C\", \"E\", \"C\", \"B\",…\n$ strunz10ed4     <chr> \"20\", \"10\", \"15\", \"30\", \"05\", \"35\", \"20\", \"05\", \"10\", …\n$ dana8ed1        <chr> \"50\", \"61\", \"40\", \"10\", \"7\", \"2\", \"50\", \"0\", \"0\", \"11\"…\n$ dana8ed2        <chr> \"4\", \"4\", \"2a\", \"5\", \"5\", \"4\", \"4\", \"0\", \"0\", \"6\", \"6\"…\n$ dana8ed3        <chr> \"9\", \"1\", \"9\", \"9\", \"1\", \"1\", \"7\", \"0\", \"0\", \"17\", \"6\"…\n$ dana8ed4        <chr> \"1\", \"1\", \"1\", \"1\", \"4\", \"1\", \"1\", \"0\", \"0\", \"1\", \"3\",…"
  },
  {
    "objectID": "posts/assignment-2-ver2/index.html#describe-the-data",
    "href": "posts/assignment-2-ver2/index.html#describe-the-data",
    "title": "Assignment 2: Your Data",
    "section": "DESCRIBE THE DATA",
    "text": "DESCRIBE THE DATA\n\nData Set Type\nThe dataset is stored as a great Flat Table, the items are 5883 mineral species from OpenMindat data server, and the columns representing the corresponding attributes.\n\n\nMineral Species Attributes\nc('id', 'name', 'elements', 'sigelements', 'yeardiscovery', 'hmin', 'hmax', 'hardtype', 'specificgravity', 'strunz10ed1', 'strunz10ed2', 'strunz10ed3', 'strunz10ed4', 'dana8ed1', 'dana8ed2', 'dana8ed3', 'dana8ed4')\n\n\n [1] \"id\"              \"name\"            \"elements\"        \"sigelements\"    \n [5] \"yeardiscovery\"   \"hmin\"            \"hmax\"            \"hardtype\"       \n [9] \"specificgravity\" \"strunz10ed1\"     \"strunz10ed2\"     \"strunz10ed3\"    \n[13] \"strunz10ed4\"     \"dana8ed1\"        \"dana8ed2\"        \"dana8ed3\"       \n[17] \"dana8ed4\"       \n\n\n\n\nAttribute Types\nThe attributes of the data are recorded in a 2-dimensional format, therefore the data frame rows will looks similar to the result of glimpse function. The ‘id’ field is in a strict ascending order, while not continuous. The ‘id’ field of each row is determined by the website managers or data providers, therefore it has nothing to do with some standard identifications. The ‘names’ field indicates the IMA approved mineral species names. The ‘elements’ and ‘sigelements’ fields indicating the elements of the mineral chemical formual, while the ‘sigelement’ is determined by some significant elements as a subset of ‘elements’. In compatable with csv format, the elements in this field are separated by hyphens \\(-\\).\n\n\nCode\nhead(result)\n\n\n  id            name           elements        sigelements yeardiscovery hmin\n1  1      Abelsonite         -Ni-N-C-H-         -Ni-N-C-H-          1975  2.0\n2  2 Abenakiite-(Ce) -Ce-Na-Si-O-P-C-S- -Ce-Na-Si-O-P-C-S-                4.0\n3  3    Abernathyite       -As-O-K-H-U-       -As-O-K-H-U-          1956  2.5\n4  4        Abhurite        -Cl-Sn-O-H-        -Cl-Sn-O-H-          1983  2.0\n5  9  Abswurmbachite       -Cu-Mn-Si-O-       -Cu-Mn-Si-O-          1990  6.5\n6 10       Acanthite             -Ag-S-             -Ag-S-          1855  2.0\n  hmax hardtype            specificgravity strunz10ed1 strunz10ed2 strunz10ed3\n1  3.0        0                        1.4          10           C           A\n2  5.0        0                       3.21           9           C           K\n3  3.0        0                                      8           E           B\n4  2.0        3                       4.29           3           D           A\n5  6.5        0                                      9           A           G\n6  2.5        3 7.24 (calc)  7.2-7.4(meas)           2           B           A\n  strunz10ed4 dana8ed1 dana8ed2 dana8ed3 dana8ed4\n1          20       50        4        9        1\n2          10       61        4        1        1\n3          15       40       2a        9        1\n4          30       10        5        9        1\n5          05        7        5        1        4\n6          35        2        4        1        1"
  },
  {
    "objectID": "posts/assignment-2-ver2/index.html#question",
    "href": "posts/assignment-2-ver2/index.html#question",
    "title": "Assignment 2: Your Data",
    "section": "Question",
    "text": "Question\n\n\n\n\n\n\nNote\n\n\n\n\nI have no idea why the render result of this .qmd file failed to adapt to the html style.\n\nThe problem is that the .qmd file shall not consist of the hashtag # symbol.\nAnother issue fixed is that the json file is originally contains 5883 items, which should be converted into 5883 rows of csv items. While the converting results shows there were over 5900 rows. The reason for this problem is that there are some annoying \\ns in the attributes, which will end up with new rows in the exported csv file. I fixed this issue by simply removing all the \\ns in the json file."
  },
  {
    "objectID": "posts/assignment-2-ver1/index.html",
    "href": "posts/assignment-2-ver1/index.html",
    "title": "Assignment 2: Your Data",
    "section": "",
    "text": "This dataset is generated based on the elements coexistence counts from Mindat.org database. The original data source is retrieved via Mindat API and stored in JSON format. Then after data pre-process and data cleaning steps, the retrieved data is cured and stored in CSV format. The dataset can be accessed at the Github repository, in the name of total_elements_mindat.csv.\n\n\n\n\n\n\nNote\n\n\n\nThe CSV file of dataset is a concatenated version of 72 separate spread sheets of element triplets coexistence values. Each spread sheet has 2 + 72 columns, the first column indicates the background element, which should remain the same throughout each separate sheet. The second column records the second dimension of the element triplets Then the third dimension of elements are listed by the remaining columns. The value of cell \\((i, j)\\) indicating the coexistence amount of three elements: the first two elements in \\((i, 0)\\) and \\((i, 1)\\), and the third element in \\((0, j)\\).\n\n\n\n\nThe dataset was retrieved via Mindat API as a JSON file. In the data preprocessing step, the elements information are extracted and statistically recorded in a new JSON file. Then I reorganized the data into 72 spread sheets as CSV formats."
  },
  {
    "objectID": "posts/assignment-2-ver1/index.html#importing-the-data",
    "href": "posts/assignment-2-ver1/index.html#importing-the-data",
    "title": "Assignment 2: Your Data",
    "section": "IMPORTING THE DATA",
    "text": "IMPORTING THE DATA\nI’m going to use the built-in read.csv package to import CSV file.\n\n\nCode\nlibrary(tidyverse)\n# result <- read.csv(file = 'total_elements_mindat.csv')\nresult <- read.csv(file = 'total_elements_mindat.csv')\n\n\nThe glimpse command in the Tidyverse package is a nice way to summarize the data frame:\n\n\nCode\nglimpse(result)\n\n\nRows: 5,184\nColumns: 74\n$ zaxis <chr> \"H\", \"H\", \"H\", \"H\", \"H\", \"H\", \"H\", \"H\", \"H\", \"H\", \"H\", \"H\", \"H\",…\n$ yaxis <chr> \"H\", \"Li\", \"Be\", \"B\", \"C\", \"N\", \"O\", \"F\", \"Na\", \"Mg\", \"Al\", \"Si\"…\n$ H     <int> 3228, 51, 66, 193, 330, 128, 3205, 141, 643, 472, 817, 1023, 524…\n$ Li    <int> 51, 51, 4, 8, 2, 0, 51, 4, 19, 6, 25, 39, 9, 1, 1, 6, 8, 0, 6, 0…\n$ Be    <int> 66, 4, 66, 3, 1, 0, 66, 1, 13, 4, 8, 31, 27, 0, 0, 4, 34, 0, 0, …\n$ B     <int> 193, 8, 3, 193, 13, 3, 192, 10, 50, 55, 52, 73, 3, 8, 24, 9, 89,…\n$ C     <int> 330, 2, 1, 13, 330, 23, 317, 12, 65, 55, 50, 46, 17, 30, 19, 11,…\n$ N     <int> 128, 0, 0, 3, 23, 128, 118, 5, 23, 13, 22, 10, 18, 48, 23, 6, 8,…\n$ O     <int> 3205, 51, 66, 192, 317, 118, 3205, 138, 643, 472, 817, 1021, 524…\n$ F     <int> 141, 4, 1, 10, 12, 5, 138, 141, 54, 22, 79, 58, 30, 24, 8, 14, 5…\n$ Na    <int> 643, 19, 13, 50, 65, 23, 643, 54, 643, 106, 182, 356, 89, 102, 3…\n$ Mg    <int> 472, 6, 4, 55, 55, 13, 472, 22, 106, 472, 147, 161, 86, 61, 28, …\n$ Al    <int> 817, 25, 8, 52, 50, 22, 817, 79, 182, 147, 817, 401, 169, 135, 3…\n$ Si    <int> 1023, 39, 31, 73, 46, 10, 1021, 58, 356, 161, 401, 1023, 15, 36,…\n$ P     <int> 524, 9, 27, 3, 17, 18, 524, 30, 89, 86, 169, 15, 524, 21, 1, 32,…\n$ S     <int> 531, 1, 0, 8, 30, 48, 531, 24, 102, 61, 135, 36, 21, 531, 27, 53…\n$ Cl    <int> 210, 1, 0, 24, 19, 23, 204, 8, 39, 28, 33, 36, 1, 27, 210, 26, 5…\n$ K     <int> 287, 6, 4, 9, 11, 6, 287, 14, 82, 50, 81, 162, 32, 53, 26, 287, …\n$ Ca    <int> 918, 8, 34, 89, 97, 8, 918, 58, 187, 131, 269, 424, 134, 84, 53,…\n$ Sc    <int> 8, 0, 0, 0, 0, 0, 8, 0, 1, 3, 0, 4, 3, 0, 0, 0, 5, 8, 0, 0, 0, 0…\n$ Ti    <int> 145, 6, 0, 3, 2, 0, 145, 18, 81, 11, 9, 116, 9, 2, 2, 30, 32, 0,…\n$ V     <int> 181, 0, 0, 3, 6, 8, 180, 2, 28, 24, 31, 27, 14, 12, 3, 10, 55, 0…\n$ Cr    <int> 40, 0, 0, 4, 5, 0, 40, 2, 7, 11, 4, 13, 2, 6, 3, 3, 11, 0, 1, 2,…\n$ Mn    <int> 406, 4, 9, 15, 17, 2, 406, 14, 81, 42, 70, 185, 98, 23, 17, 28, …\n$ Fe    <int> 663, 11, 9, 18, 22, 18, 663, 15, 130, 78, 136, 216, 176, 122, 32…\n$ Co    <int> 35, 0, 0, 0, 4, 1, 35, 0, 3, 0, 1, 1, 1, 12, 2, 0, 4, 0, 0, 1, 0…\n$ Ni    <int> 63, 0, 0, 0, 12, 4, 62, 0, 2, 1, 6, 7, 2, 15, 5, 1, 4, 0, 0, 2, …\n$ Cu    <int> 359, 1, 0, 4, 36, 10, 358, 6, 16, 16, 39, 29, 40, 87, 61, 16, 50…\n$ Zn    <int> 208, 0, 3, 0, 15, 1, 208, 1, 11, 16, 23, 32, 44, 46, 7, 7, 29, 0…\n$ Ga    <int> 4, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Ge    <int> 10, 0, 0, 0, 1, 0, 10, 0, 0, 0, 3, 1, 0, 4, 0, 0, 2, 0, 0, 0, 0,…\n$ As    <int> 397, 0, 3, 2, 4, 5, 397, 3, 36, 40, 42, 17, 9, 21, 14, 12, 112, …\n$ Se    <int> 26, 0, 0, 0, 0, 0, 26, 0, 2, 1, 4, 1, 0, 3, 2, 1, 3, 0, 0, 0, 0,…\n$ Br    <int> 3, 0, 0, 0, 0, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Rb    <int> 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Sr    <int> 77, 1, 0, 9, 12, 0, 77, 6, 23, 4, 30, 30, 15, 5, 2, 4, 20, 0, 8,…\n$ Y     <int> 54, 1, 1, 2, 27, 0, 54, 5, 18, 1, 13, 21, 6, 6, 2, 2, 18, 0, 2, …\n$ Zr    <int> 70, 1, 3, 2, 9, 0, 70, 3, 56, 2, 1, 58, 9, 1, 10, 10, 31, 0, 1, …\n$ Nb    <int> 54, 0, 0, 0, 4, 0, 54, 4, 26, 4, 1, 32, 4, 1, 2, 12, 17, 0, 7, 1…\n$ Mo    <int> 49, 0, 0, 0, 0, 1, 49, 0, 6, 4, 3, 0, 6, 5, 0, 4, 9, 0, 0, 0, 0,…\n$ Ru    <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Rh    <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Pd    <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Ag    <int> 3, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 1, 2, 1, 0, 0, 0, 0, 0, 0…\n$ Cd    <int> 12, 0, 0, 0, 0, 0, 12, 1, 0, 0, 1, 0, 2, 8, 0, 1, 0, 0, 0, 0, 0,…\n$ In    <int> 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Sn    <int> 21, 0, 2, 1, 0, 1, 20, 0, 2, 2, 2, 8, 0, 1, 2, 0, 7, 1, 0, 0, 0,…\n$ Sb    <int> 32, 0, 0, 0, 0, 0, 32, 0, 4, 2, 5, 2, 0, 10, 3, 2, 5, 0, 2, 0, 0…\n$ Te    <int> 52, 0, 0, 0, 2, 0, 52, 0, 0, 8, 1, 0, 0, 9, 7, 0, 6, 0, 0, 0, 1,…\n$ I     <int> 12, 0, 0, 0, 0, 1, 12, 0, 3, 3, 0, 0, 0, 1, 3, 2, 3, 0, 0, 0, 2,…\n$ Cs    <int> 12, 0, 1, 1, 0, 0, 12, 2, 4, 0, 2, 8, 1, 0, 0, 1, 4, 0, 2, 1, 0,…\n$ Ba    <int> 134, 2, 3, 4, 12, 0, 134, 16, 42, 11, 34, 76, 32, 5, 9, 8, 18, 1…\n$ La    <int> 29, 0, 0, 0, 7, 0, 29, 0, 3, 1, 14, 15, 3, 0, 0, 0, 10, 0, 1, 1,…\n$ Ce    <int> 77, 0, 2, 5, 16, 0, 77, 8, 17, 10, 25, 47, 8, 4, 1, 1, 28, 0, 13…\n$ Nd    <int> 19, 0, 1, 0, 8, 0, 19, 1, 1, 0, 3, 5, 3, 2, 0, 0, 5, 0, 0, 0, 0,…\n$ Sm    <int> 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Gd    <int> 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0…\n$ Dy    <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Er    <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Yb    <int> 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Hf    <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Ta    <int> 5, 0, 0, 0, 0, 0, 5, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0…\n$ W     <int> 22, 0, 0, 0, 1, 0, 22, 0, 5, 1, 2, 3, 1, 0, 0, 0, 7, 0, 0, 1, 0,…\n$ Re    <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Os    <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Ir    <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Pt    <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Au    <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Hg    <int> 11, 0, 0, 0, 3, 4, 10, 0, 0, 0, 1, 0, 1, 1, 4, 0, 0, 0, 0, 0, 0,…\n$ Tl    <int> 7, 0, 0, 0, 0, 0, 7, 0, 0, 0, 1, 0, 0, 4, 2, 2, 0, 0, 0, 2, 0, 0…\n$ Pb    <int> 229, 0, 1, 5, 28, 3, 228, 6, 3, 7, 27, 32, 27, 54, 39, 3, 13, 0,…\n$ Bi    <int> 42, 0, 0, 0, 0, 2, 41, 0, 1, 1, 1, 1, 11, 4, 1, 0, 1, 0, 0, 5, 1…\n$ Th    <int> 15, 0, 0, 1, 2, 0, 15, 2, 2, 0, 2, 4, 5, 0, 0, 1, 3, 0, 1, 0, 0,…\n$ U     <int> 272, 1, 0, 0, 41, 12, 272, 8, 33, 24, 21, 20, 51, 61, 2, 27, 54,…"
  },
  {
    "objectID": "posts/assignment-2-ver1/index.html#describe-the-data",
    "href": "posts/assignment-2-ver1/index.html#describe-the-data",
    "title": "Assignment 2: Your Data",
    "section": "DESCRIBE THE DATA",
    "text": "DESCRIBE THE DATA\n\nData Set Type\nThe dataset is stored as a great Flat Table, the items are arranged as each of the 72 elements, with the attributes of element triplets coexistence in the cells of corresponding sheets.\n\n\nElement list\nc('H', 'Li', 'Be', 'B', 'C', 'N', 'O', 'F', 'Na', 'Mg', 'Al', 'Si', 'P', 'S', 'Cl', 'K', 'Ca', 'Sc', 'Ti', 'V', 'Cr', 'Mn', 'Fe', 'Co', 'Ni', 'Cu', 'Zn', 'Ga', 'Ge', 'As', 'Se', 'Br', 'Rb', 'Sr', 'Y', 'Zr', 'Nb', 'Mo', 'Ru', 'Rh', 'Pd', 'Ag', 'Cd', 'In', 'Sn', 'Sb', 'Te', 'I', 'Cs', 'Ba', 'La', 'Ce', 'Nd', 'Sm', 'Gd', 'Dy', 'Er', 'Yb', 'Hf', 'Ta', 'W', 'Re', 'Os', 'Ir', 'Pt', 'Au', 'Hg', 'Tl', 'Pb', 'Bi', 'Th', 'U')\n\n\n [1] \"H\"  \"Li\" \"Be\" \"B\"  \"C\"  \"N\"  \"O\"  \"F\"  \"Na\" \"Mg\" \"Al\" \"Si\" \"P\"  \"S\"  \"Cl\"\n[16] \"K\"  \"Ca\" \"Sc\" \"Ti\" \"V\"  \"Cr\" \"Mn\" \"Fe\" \"Co\" \"Ni\" \"Cu\" \"Zn\" \"Ga\" \"Ge\" \"As\"\n[31] \"Se\" \"Br\" \"Rb\" \"Sr\" \"Y\"  \"Zr\" \"Nb\" \"Mo\" \"Ru\" \"Rh\" \"Pd\" \"Ag\" \"Cd\" \"In\" \"Sn\"\n[46] \"Sb\" \"Te\" \"I\"  \"Cs\" \"Ba\" \"La\" \"Ce\" \"Nd\" \"Sm\" \"Gd\" \"Dy\" \"Er\" \"Yb\" \"Hf\" \"Ta\"\n[61] \"W\"  \"Re\" \"Os\" \"Ir\" \"Pt\" \"Au\" \"Hg\" \"Tl\" \"Pb\" \"Bi\" \"Th\" \"U\" \n\n\n\n\nAttribute Types\nThe attributes of the data are recorded in a 2-dimensional format, therefore the data frame rows will looks similar to the result of glimpse function.\n\n\nCode\nhead(result)\n\n\n  zaxis yaxis    H Li Be   B   C   N    O   F  Na  Mg  Al   Si   P   S  Cl   K\n1     H     H 3228 51 66 193 330 128 3205 141 643 472 817 1023 524 531 210 287\n2     H    Li   51 51  4   8   2   0   51   4  19   6  25   39   9   1   1   6\n3     H    Be   66  4 66   3   1   0   66   1  13   4   8   31  27   0   0   4\n4     H     B  193  8  3 193  13   3  192  10  50  55  52   73   3   8  24   9\n5     H     C  330  2  1  13 330  23  317  12  65  55  50   46  17  30  19  11\n6     H     N  128  0  0   3  23 128  118   5  23  13  22   10  18  48  23   6\n   Ca Sc  Ti   V Cr  Mn  Fe Co Ni  Cu  Zn Ga Ge  As Se Br Rb Sr  Y Zr Nb Mo Ru\n1 918  8 145 181 40 406 663 35 63 359 208  4 10 397 26  3  1 77 54 70 54 49  0\n2   8  0   6   0  0   4  11  0  0   1   0  0  0   0  0  0  0  1  1  1  0  0  0\n3  34  0   0   0  0   9   9  0  0   0   3  0  0   3  0  0  0  0  1  3  0  0  0\n4  89  0   3   3  4  15  18  0  0   4   0  0  0   2  0  0  1  9  2  2  0  0  0\n5  97  0   2   6  5  17  22  4 12  36  15  0  1   4  0  0  0 12 27  9  4  0  0\n6   8  0   0   8  0   2  18  1  4  10   1  0  0   5  0  1  0  0  0  0  0  1  0\n  Rh Pd Ag Cd In Sn Sb Te  I Cs  Ba La Ce Nd Sm Gd Dy Er Yb Hf Ta  W Re Os Ir\n1  0  0  3 12  2 21 32 52 12 12 134 29 77 19  1  1  0  0  1  0  5 22  0  0  0\n2  0  0  0  0  0  0  0  0  0  0   2  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n3  0  0  0  0  0  2  0  0  0  1   3  0  2  1  0  0  0  0  1  0  0  0  0  0  0\n4  0  0  0  0  0  1  0  0  0  1   4  0  5  0  0  0  0  0  0  0  0  0  0  0  0\n5  0  0  0  0  0  0  0  2  0  0  12  7 16  8  0  1  0  0  0  0  0  1  0  0  0\n6  0  0  0  0  0  1  0  0  1  0   0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  Pt Au Hg Tl  Pb Bi Th   U\n1  0  0 11  7 229 42 15 272\n2  0  0  0  0   0  0  0   1\n3  0  0  0  0   1  0  0   0\n4  0  0  0  0   5  0  1   0\n5  0  0  3  0  28  0  2  41\n6  0  0  4  0   3  2  0  12"
  },
  {
    "objectID": "posts/assignment-2-ver1/index.html#question",
    "href": "posts/assignment-2-ver1/index.html#question",
    "title": "Assignment 2: Your Data",
    "section": "Question",
    "text": "Question\n\n\n\n\n\n\nNote\n\n\n\n\nI have no idea why the render result of this .qmd file failed to adapt to the html style.\n\nThe problem is that the .qmd file shall not consist of the hashtag # symbol."
  }
]